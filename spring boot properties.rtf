{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.15063}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 # ===================================================================\par
# COMMON SPRING BOOT PROPERTIES\par
#\par
# This sample file is provided as a guideline. Do NOT copy it in its\par
# entirety to your own application.               ^^^\par
# ===================================================================\par
\par
\par
# ----------------------------------------\par
# CORE PROPERTIES\par
# ----------------------------------------\par
debug=false # Enable debug logs.\par
trace=false # Enable trace logs.\par
\par
# LOGGING\par
logging.config= # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.\par
logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.\par
logging.file= # Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.\par
logging.file.max-history=0 # Maximum of archive log files to keep. Only supported with the default logback setup.\par
logging.file.max-size=10MB # Maximum log file size. Only supported with the default logback setup.\par
logging.level.*= # Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.\par
logging.path= # Location of the log file. For instance, `/var/log`.\par
logging.pattern.console= # Appender pattern for output to the console. Supported only with the default Logback setup.\par
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS # Appender pattern for log date format. Supported only with the default Logback setup.\par
logging.pattern.file= # Appender pattern for output to a file. Supported only with the default Logback setup.\par
logging.pattern.level=%5p # Appender pattern for log level. Supported only with the default Logback setup.\par
logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.\par
\par
# AOP\par
spring.aop.auto=true # Add @EnableAspectJAutoProxy.\par
spring.aop.proxy-target-class=true # Whether subclass-based (CGLIB) proxies are to be created (true), as opposed to standard Java interface-based proxies (false).\par
\par
# IDENTITY (ContextIdApplicationContextInitializer)\par
spring.application.name= # Application name.\par
\par
# ADMIN (SpringApplicationAdminJmxAutoConfiguration)\par
spring.application.admin.enabled=false # Whether to enable admin features for the application.\par
spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.\par
\par
# AUTO-CONFIGURATION\par
spring.autoconfigure.exclude= # Auto-configuration classes to exclude.\par
\par
# BANNER\par
spring.banner.charset=UTF-8 # Banner file encoding.\par
spring.banner.location=classpath:banner.txt # Banner text resource location.\par
spring.banner.image.location=classpath:banner.gif # Banner image file location (jpg or png can also be used).\par
spring.banner.image.width=76 # Width of the banner image in chars.\par
spring.banner.image.height= # Height of the banner image in chars (default based on image height).\par
spring.banner.image.margin=2 # Left hand image margin in chars.\par
spring.banner.image.invert=false # Whether images should be inverted for dark terminal themes.\par
\par
# SPRING CORE\par
spring.beaninfo.ignore=true # Whether to skip search of BeanInfo classes.\par
\par
# SPRING CACHE (CacheProperties)\par
spring.cache.cache-names= # Comma-separated list of cache names to create if supported by the underlying cache manager.\par
spring.cache.caffeine.spec= # The spec to use to create caches. See CaffeineSpec for more details on the spec format.\par
spring.cache.couchbase.expiration=0ms # Entry expiration. By default the entries never expire. Note that this value is ultimately converted to seconds.\par
spring.cache.ehcache.config= # The location of the configuration file to use to initialize EhCache.\par
spring.cache.infinispan.config= # The location of the configuration file to use to initialize Infinispan.\par
spring.cache.jcache.config= # The location of the configuration file to use to initialize the cache manager.\par
spring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Needed only if more than one JSR-107 implementation is available on the classpath.\par
spring.cache.redis.cache-null-values=true # Allow caching null values.\par
spring.cache.redis.key-prefix= # Key prefix.\par
spring.cache.redis.time-to-live=0ms # Entry expiration. By default the entries never expire.\par
spring.cache.redis.use-key-prefix=true # Whether to use the key prefix when writing to Redis.\par
spring.cache.type= # Cache type. By default, auto-detected according to the environment.\par
\par
# SPRING CONFIG - using environment property only (ConfigFileApplicationListener)\par
spring.config.additional-location= # Config file locations used in addition to the defaults.\par
spring.config.location= # Config file locations that replace the defaults.\par
spring.config.name=application # Config file name.\par
\par
# HAZELCAST (HazelcastProperties)\par
spring.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast.\par
\par
# PROJECT INFORMATION (ProjectInfoProperties)\par
spring.info.build.location=classpath:META-INF/build-info.properties # Location of the generated build-info.properties file.\par
spring.info.git.location=classpath:git.properties # Location of the generated git.properties file.\par
\par
# JMX\par
spring.jmx.default-domain= # JMX domain name.\par
spring.jmx.enabled=true # Expose management beans to the JMX domain.\par
spring.jmx.server=mbeanServer # MBeanServer bean name.\par
\par
# Email (MailProperties)\par
spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.\par
spring.mail.host= # SMTP server host. For instance, `smtp.example.com`.\par
spring.mail.jndi-name= # Session JNDI name. When set, takes precedence over other Session settings.\par
spring.mail.password= # Login password of the SMTP server.\par
spring.mail.port= # SMTP server port.\par
spring.mail.properties.*= # Additional JavaMail Session properties.\par
spring.mail.protocol=smtp # Protocol used by the SMTP server.\par
spring.mail.test-connection=false # Whether to test that the mail server is available on startup.\par
spring.mail.username= # Login user of the SMTP server.\par
\par
# APPLICATION SETTINGS (SpringApplication)\par
spring.main.banner-mode=console # Mode used to display the banner when the application runs.\par
spring.main.sources= # Sources (class names, package names, or XML resource locations) to include in the ApplicationContext.\par
spring.main.web-application-type= # Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath.\par
\par
# FILE ENCODING (FileEncodingApplicationListener)\par
spring.mandatory-file-encoding= # Expected character encoding the application must use.\par
\par
# INTERNATIONALIZATION (MessageSourceProperties)\par
spring.messages.always-use-message-format=false # Whether to always apply the MessageFormat rules, parsing even messages without arguments.\par
spring.messages.basename=messages # Comma-separated list of basenames (essentially a fully-qualified classpath location), each following the ResourceBundle convention with relaxed support for slash based locations.\par
spring.messages.cache-duration= # Loaded resource bundle files cache duration. When not set, bundles are cached forever. If a duration suffix is not specified, seconds will be used.\par
spring.messages.encoding=UTF-8 # Message bundles encoding.\par
spring.messages.fallback-to-system-locale=true # Whether to fall back to the system Locale if no files for a specific Locale have been found.\par
spring.messages.use-code-as-default-message=false # Whether to use the message code as the default message instead of throwing a "NoSuchMessageException". Recommended during development only.\par
\par
# OUTPUT\par
spring.output.ansi.enabled=detect # Configures the ANSI output.\par
\par
# PID FILE (ApplicationPidFileWriter)\par
spring.pid.fail-on-write-error= # Fails if ApplicationPidFileWriter is used but it cannot write the PID file.\par
spring.pid.file= # Location of the PID file to write (if ApplicationPidFileWriter is used).\par
\par
# PROFILES\par
spring.profiles.active= # Comma-separated list of active profiles. Can be overridden by a command line switch.\par
spring.profiles.include= # Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML).\par
\par
# QUARTZ SCHEDULER (QuartzProperties)\par
spring.quartz.jdbc.comment-prefix=-- # Prefix for single-line comments in SQL initialization scripts.\par
spring.quartz.jdbc.initialize-schema=embedded # Database schema initialization mode.\par
spring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\par
spring.quartz.job-store-type=memory # Quartz job store type.\par
spring.quartz.properties.*= # Additional Quartz Scheduler properties.\par
\par
# REACTOR (ReactorCoreProperties)\par
spring.reactor.stacktrace-mode.enabled=false # Whether Reactor should collect stacktrace information at runtime.\par
\par
# SENDGRID (SendGridAutoConfiguration)\par
spring.sendgrid.api-key= # SendGrid API key.\par
spring.sendgrid.proxy.host= # SendGrid proxy host.\par
spring.sendgrid.proxy.port= # SendGrid proxy port.\par
\par
\par
# ----------------------------------------\par
# WEB PROPERTIES\par
# ----------------------------------------\par
\par
# EMBEDDED SERVER CONFIGURATION (ServerProperties)\par
server.address= # Network address to which the server should bind.\par
server.compression.enabled=false # Whether response compression is enabled.\par
server.compression.excluded-user-agents= # List of user-agents to exclude from compression.\par
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript # Comma-separated list of MIME types that should be compressed.\par
server.compression.min-response-size=2048 # Minimum "Content-Length" value that is required for compression to be performed.\par
server.connection-timeout= # Time that connectors wait for another HTTP request before closing the connection. When not set, the connector's container-specific default is used. Use a value of -1 to indicate no (that is, an infinite) timeout.\par
server.error.include-exception=false # Include the "exception" attribute.\par
server.error.include-stacktrace=never # When to include a "stacktrace" attribute.\par
server.error.path=/error # Path of the error controller.\par
server.error.whitelabel.enabled=true # Whether to enable the default error page displayed in browsers in case of a server error.\par
server.http2.enabled=false # Whether to enable HTTP/2 support, if the current environment supports it.\par
server.jetty.acceptors= # Number of acceptor threads to use.\par
server.jetty.accesslog.append=false # Append to log.\par
server.jetty.accesslog.date-format=dd/MMM/yyyy:HH:mm:ss Z # Timestamp format of the request log.\par
server.jetty.accesslog.enabled=false # Enable access log.\par
server.jetty.accesslog.extended-format=false # Enable extended NCSA format.\par
server.jetty.accesslog.file-date-format= # Date format to place in log file name.\par
server.jetty.accesslog.filename= # Log filename. If not specified, logs redirect to "System.err".\par
server.jetty.accesslog.locale= # Locale of the request log.\par
server.jetty.accesslog.log-cookies=false # Enable logging of the request cookies.\par
server.jetty.accesslog.log-latency=false # Enable logging of request processing time.\par
server.jetty.accesslog.log-server=false # Enable logging of the request hostname.\par
server.jetty.accesslog.retention-period=31 # Number of days before rotated log files are deleted.\par
server.jetty.accesslog.time-zone=GMT # Timezone of the request log.\par
server.jetty.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post or put content.\par
server.jetty.selectors= # Number of selector threads to use.\par
server.max-http-header-size=0 # Maximum size, in bytes, of the HTTP message header.\par
server.port=8080 # Server HTTP port.\par
server.server-header= # Value to use for the Server response header (if empty, no header is sent).\par
server.use-forward-headers= # Whether X-Forwarded-* headers should be applied to the HttpRequest.\par
server.servlet.context-parameters.*= # Servlet context init parameters.\par
server.servlet.context-path= # Context path of the application.\par
server.servlet.application-display-name=application # Display name of the application.\par
server.servlet.jsp.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.\par
server.servlet.jsp.init-parameters.*= # Init parameters used to configure the JSP servlet.\par
server.servlet.jsp.registered=true # Whether the JSP servlet is registered.\par
server.servlet.path=/ # Path of the main dispatcher servlet.\par
server.servlet.session.cookie.comment= # Comment for the session cookie.\par
server.servlet.session.cookie.domain= # Domain for the session cookie.\par
server.servlet.session.cookie.http-only= # "HttpOnly" flag for the session cookie.\par
server.servlet.session.cookie.max-age= # Maximum age of the session cookie. If a duration suffix is not specified, seconds will be used.\par
server.servlet.session.cookie.name= # Session cookie name.\par
server.servlet.session.cookie.path= # Path of the session cookie.\par
server.servlet.session.cookie.secure= # "Secure" flag for the session cookie.\par
server.servlet.session.persistent=false # Whether to persist session data between restarts.\par
server.servlet.session.store-dir= # Directory used to store session data.\par
server.servlet.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.\par
server.servlet.session.tracking-modes= # Session tracking modes (one or more of the following: "cookie", "url", "ssl").\par
server.ssl.ciphers= # Supported SSL ciphers.\par
server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store.\par
server.ssl.enabled= # Enable SSL support.\par
server.ssl.enabled-protocols= # Enabled SSL protocols.\par
server.ssl.key-alias= # Alias that identifies the key in the key store.\par
server.ssl.key-password= # Password used to access the key in the key store.\par
server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).\par
server.ssl.key-store-password= # Password used to access the key store.\par
server.ssl.key-store-provider= # Provider for the key store.\par
server.ssl.key-store-type= # Type of the key store.\par
server.ssl.protocol=TLS # SSL protocol to use.\par
server.ssl.trust-store= # Trust store that holds SSL certificates.\par
server.ssl.trust-store-password= # Password used to access the trust store.\par
server.ssl.trust-store-provider= # Provider for the trust store.\par
server.ssl.trust-store-type= # Type of the trust store.\par
server.tomcat.accept-count=0 # Maximum queue length for incoming connection requests when all possible request processing threads are in use.\par
server.tomcat.accesslog.buffered=true # Whether to buffer output such that it is flushed only periodically.\par
server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be absolute or relative to the Tomcat base dir.\par
server.tomcat.accesslog.enabled=false # Enable access log.\par
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd # Date format to place in the log file name.\par
server.tomcat.accesslog.pattern=common # Format pattern for access logs.\par
server.tomcat.accesslog.prefix=access_log # Log file name prefix.\par
server.tomcat.accesslog.rename-on-rotate=false # Whether to defer inclusion of the date stamp in the file name until rotate time.\par
server.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for the IP address, Hostname, protocol, and port used for the request.\par
server.tomcat.accesslog.rotate=true # Whether to enable access log rotation.\par
server.tomcat.accesslog.suffix=.log # Log file name suffix.\par
server.tomcat.additional-tld-skip-patterns= # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.\par
server.tomcat.background-processor-delay=30s # Delay between the invocation of backgroundProcess methods. If a duration suffix is not specified, seconds will be used.\par
server.tomcat.basedir= # Tomcat base directory. If not specified, a temporary directory is used.\par
server.tomcat.internal-proxies=10\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}|\\\\\par
\tab\tab 192\\\\.168\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}|\\\\\par
\tab\tab 169\\\\.254\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}|\\\\\par
\tab\tab 127\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}|\\\\\par
\tab\tab 172\\\\.1[6-9]\{1\}\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}|\\\\\par
\tab\tab 172\\\\.2[0-9]\{1\}\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\}|\\\\\par
\tab\tab 172\\\\.3[0-1]\{1\}\\\\.\\\\d\{1,3\}\\\\.\\\\d\{1,3\} # Regular expression matching trusted IP addresses.\par
server.tomcat.max-connections=0 # Maximum number of connections that the server accepts and processes at any given time.\par
server.tomcat.max-http-header-size=0 # Maximum size, in bytes, of the HTTP message header.\par
server.tomcat.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post content.\par
server.tomcat.max-threads=0 # Maximum number of worker threads.\par
server.tomcat.min-spare-threads=0 # Minimum number of worker threads.\par
server.tomcat.port-header=X-Forwarded-Port # Name of the HTTP header used to override the original port value.\par
server.tomcat.protocol-header= # Header that holds the incoming protocol, usually named "X-Forwarded-Proto".\par
server.tomcat.protocol-header-https-value=https # Value of the protocol header indicating whether the incoming request uses SSL.\par
server.tomcat.redirect-context-root= # Whether requests to the context root should be redirected by appending a / to the path.\par
server.tomcat.remote-ip-header= # Name of the HTTP header from which the remote IP is extracted. For instance, `X-FORWARDED-FOR`.\par
server.tomcat.resource.cache-ttl= # Time-to-live of the static resource cache.\par
server.tomcat.uri-encoding=UTF-8 # Character encoding to use to decode the URI.\par
server.tomcat.use-relative-redirects= # Whether HTTP 1.1 and later location headers generated by a call to sendRedirect will use relative or absolute redirects.\par
server.undertow.accesslog.dir= # Undertow access log directory.\par
server.undertow.accesslog.enabled=false # Whether to enable the access log.\par
server.undertow.accesslog.pattern=common # Format pattern for access logs.\par
server.undertow.accesslog.prefix=access_log. # Log file name prefix.\par
server.undertow.accesslog.rotate=true # Whether to enable access log rotation.\par
server.undertow.accesslog.suffix=log # Log file name suffix.\par
server.undertow.buffer-size= # Size of each buffer, in bytes.\par
server.undertow.direct-buffers= # Whether to allocate buffers outside the Java heap.\par
server.undertow.io-threads= # Number of I/O threads to create for the worker.\par
server.undertow.eager-filter-init=true # Whether servlet filters should be initialized on startup.\par
server.undertow.max-http-post-size=0 # Maximum size, in bytes, of the HTTP post content.\par
server.undertow.worker-threads= # Number of worker threads.\par
\par
# FREEMARKER (FreeMarkerProperties)\par
spring.freemarker.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.\par
spring.freemarker.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.\par
spring.freemarker.cache=false # Whether to enable template caching.\par
spring.freemarker.charset=UTF-8 # Template encoding.\par
spring.freemarker.check-template-location=true # Whether to check that the templates location exists.\par
spring.freemarker.content-type=text/html # Content-Type value.\par
spring.freemarker.enabled=true # Whether to enable MVC view resolution for this technology.\par
spring.freemarker.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template.\par
spring.freemarker.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template.\par
spring.freemarker.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring's macro library, under the name "springMacroRequestContext".\par
spring.freemarker.prefer-file-system-access=true # Whether to prefer file system access for template loading. File system access enables hot detection of template changes.\par
spring.freemarker.prefix= # Prefix that gets prepended to view names when building a URL.\par
spring.freemarker.request-context-attribute= # Name of the RequestContext attribute for all views.\par
spring.freemarker.settings.*= # Well-known FreeMarker keys which are passed to FreeMarker's Configuration.\par
spring.freemarker.suffix=.ftl # Suffix that gets appended to view names when building a URL.\par
spring.freemarker.template-loader-path=classpath:/templates/ # Comma-separated list of template paths.\par
spring.freemarker.view-names= # White list of view names that can be resolved.\par
\par
# GROOVY TEMPLATES (GroovyTemplateProperties)\par
spring.groovy.template.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.\par
spring.groovy.template.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.\par
spring.groovy.template.cache=false # Whether to enable template caching.\par
spring.groovy.template.charset=UTF-8 # Template encoding.\par
spring.groovy.template.check-template-location=true # Whether to check that the templates location exists.\par
spring.groovy.template.configuration.*= # See GroovyMarkupConfigurer\par
spring.groovy.template.content-type=text/html # Content-Type value.\par
spring.groovy.template.enabled=true # Whether to enable MVC view resolution for this technology.\par
spring.groovy.template.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template.\par
spring.groovy.template.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template.\par
spring.groovy.template.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring's macro library, under the name "springMacroRequestContext".\par
spring.groovy.template.prefix= # Prefix that gets prepended to view names when building a URL.\par
spring.groovy.template.request-context-attribute= # Name of the RequestContext attribute for all views.\par
spring.groovy.template.resource-loader-path=classpath:/templates/ # Template path.\par
spring.groovy.template.suffix=.tpl # Suffix that gets appended to view names when building a URL.\par
spring.groovy.template.view-names= # White list of view names that can be resolved.\par
\par
# SPRING HATEOAS (HateoasProperties)\par
spring.hateoas.use-hal-as-default-json-media-type=true # Whether application/hal+json responses should be sent to requests that accept application/json.\par
\par
# HTTP message conversion\par
spring.http.converters.preferred-json-mapper= # Preferred JSON mapper to use for HTTP message conversion. By default, auto-detected according to the environment.\par
\par
# HTTP encoding (HttpEncodingProperties)\par
spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.\par
spring.http.encoding.enabled=true # Whether to enable http encoding support.\par
spring.http.encoding.force= # Whether to force the encoding to the configured charset on HTTP requests and responses.\par
spring.http.encoding.force-request= # Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when "force" has not been specified.\par
spring.http.encoding.force-response= # Whether to force the encoding to the configured charset on HTTP responses.\par
spring.http.encoding.mapping= # Locale in which to encode mapping.\par
\par
# MULTIPART (MultipartProperties)\par
spring.servlet.multipart.enabled=true # Whether to enable support of multipart uploads.\par
spring.servlet.multipart.file-size-threshold=0 # Threshold after which files are written to disk. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.\par
spring.servlet.multipart.location= # Intermediate location of uploaded files.\par
spring.servlet.multipart.max-file-size=1MB # Max file size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.\par
spring.servlet.multipart.max-request-size=10MB # Max request size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.\par
spring.servlet.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.\par
\par
# JACKSON (JacksonProperties)\par
spring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance, `yyyy-MM-dd HH:mm:ss`.\par
spring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization. Configured with one of the values in Jackson's JsonInclude.Include enumeration.\par
spring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.\par
spring.jackson.generator.*= # Jackson on/off features for generators.\par
spring.jackson.joda-date-time-format= # Joda date time format string. If not configured, "date-format" is used as a fallback if it is configured with a format string.\par
spring.jackson.locale= # Locale used for formatting.\par
spring.jackson.mapper.*= # Jackson general purpose on/off features.\par
spring.jackson.parser.*= # Jackson on/off features for parsers.\par
spring.jackson.property-naming-strategy= # One of the constants on Jackson's PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.\par
spring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.\par
spring.jackson.time-zone= #  Time zone used when formatting dates. For instance, "America/Los_Angeles" or "GMT+10".\par
\par
# GSON (GsonProperties)\par
spring.gson.date-format= # Format to use when serializing Date objects.\par
spring.gson.disable-html-escaping= # Whether to disable the escaping of HTML characters such as '<', '>', etc.\par
spring.gson.disable-inner-class-serialization= # Whether to exclude inner classes during serialization.\par
spring.gson.enable-complex-map-key-serialization= # Whether to enable serialization of complex map keys (i.e. non-primitives).\par
spring.gson.exclude-fields-without-expose-annotation= # Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.\par
spring.gson.field-naming-policy= # Naming policy that should be applied to an object's field during serialization and deserialization.\par
spring.gson.generate-non-executable-json= # Whether to generate non executable JSON by prefixing the output with some special text.\par
spring.gson.lenient= # Whether to be lenient about parsing JSON that doesn't conform to RFC 4627.\par
spring.gson.long-serialization-policy= # Serialization policy for Long and long types.\par
spring.gson.pretty-printing= # Whether to output serialized JSON that fits in a page for pretty printing.\par
spring.gson.serialize-nulls= # Whether to serialize null fields.\par
\par
# JERSEY (JerseyProperties)\par
spring.jersey.application-path= # Path that serves as the base URI for the application. If specified, overrides the value of "@ApplicationPath".\par
spring.jersey.filter.order=0 # Jersey filter chain order.\par
spring.jersey.init.*= # Init parameters to pass to Jersey through the servlet or filter.\par
spring.jersey.servlet.load-on-startup=-1 # Load on startup priority of the Jersey servlet.\par
spring.jersey.type=servlet # Jersey integration type.\par
\par
# SPRING LDAP (LdapProperties)\par
spring.ldap.anonymous-read-only=false # Whether read-only operations should use an anonymous environment.\par
spring.ldap.base= # Base suffix from which all operations should originate.\par
spring.ldap.base-environment.*= # LDAP specification settings.\par
spring.ldap.password= # Login password of the server.\par
spring.ldap.urls= # LDAP URLs of the server.\par
spring.ldap.username= # Login username of the server.\par
\par
# EMBEDDED LDAP (EmbeddedLdapProperties)\par
spring.ldap.embedded.base-dn= # List of base DNs.\par
spring.ldap.embedded.credential.username= # Embedded LDAP username.\par
spring.ldap.embedded.credential.password= # Embedded LDAP password.\par
spring.ldap.embedded.ldif=classpath:schema.ldif # Schema (LDIF) script resource reference.\par
spring.ldap.embedded.port=0 # Embedded LDAP port.\par
spring.ldap.embedded.validation.enabled=true # Whether to enable LDAP schema validation.\par
spring.ldap.embedded.validation.schema= # Path to the custom schema.\par
\par
# MUSTACHE TEMPLATES (MustacheAutoConfiguration)\par
spring.mustache.allow-request-override=false # Whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.\par
spring.mustache.allow-session-override=false # Whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.\par
spring.mustache.cache=false # Whether to enable template caching.\par
spring.mustache.charset=UTF-8 # Template encoding.\par
spring.mustache.check-template-location=true # Whether to check that the templates location exists.\par
spring.mustache.content-type=text/html # Content-Type value.\par
spring.mustache.enabled=true # Whether to enable MVC view resolution for this technology.\par
spring.mustache.expose-request-attributes=false # Whether all request attributes should be added to the model prior to merging with the template.\par
spring.mustache.expose-session-attributes=false # Whether all HttpSession attributes should be added to the model prior to merging with the template.\par
spring.mustache.expose-spring-macro-helpers=true # Whether to expose a RequestContext for use by Spring's macro library, under the name "springMacroRequestContext".\par
spring.mustache.prefix=classpath:/templates/ # Prefix to apply to template names.\par
spring.mustache.request-context-attribute= # Name of the RequestContext attribute for all views.\par
spring.mustache.suffix=.mustache # Suffix to apply to template names.\par
spring.mustache.view-names= # White list of view names that can be resolved.\par
\par
# SPRING MVC (WebMvcProperties)\par
spring.mvc.async.request-timeout= # Amount of time before asynchronous request handling times out.\par
spring.mvc.contentnegotiation.favor-parameter=false # Whether a request parameter ("format" by default) should be used to determine the requested media type.\par
spring.mvc.contentnegotiation.favor-path-extension=false # Whether the path extension in the URL path should be used to determine the requested media type.\par
spring.mvc.contentnegotiation.media-types.*= # Map file extensions to media types for content negotiation. For instance, yml to text/yaml.\par
spring.mvc.contentnegotiation.parameter-name= # Query parameter name to use when "favor-parameter" is enabled.\par
spring.mvc.date-format= # Date format to use. For instance, `dd/MM/yyyy`.\par
spring.mvc.dispatch-trace-request=false # Whether to dispatch TRACE requests to the FrameworkServlet doService method.\par
spring.mvc.dispatch-options-request=true # Whether to dispatch OPTIONS requests to the FrameworkServlet doService method.\par
spring.mvc.favicon.enabled=true # Whether to enable resolution of favicon.ico.\par
spring.mvc.formcontent.putfilter.enabled=true # Whether to enable Spring's HttpPutFormContentFilter.\par
spring.mvc.ignore-default-model-on-redirect=true # Whether the content of the "default" model should be ignored during redirect scenarios.\par
spring.mvc.locale= # Locale to use. By default, this locale is overridden by the "Accept-Language" header.\par
spring.mvc.locale-resolver=accept-header # Define how the locale should be resolved.\par
spring.mvc.log-resolved-exception=false # Whether to enable warn logging of exceptions resolved by a "HandlerExceptionResolver".\par
spring.mvc.message-codes-resolver-format= # Formatting strategy for message codes. For instance, `PREFIX_ERROR_CODE`.\par
spring.mvc.pathmatch.use-registered-suffix-pattern=false # Whether suffix pattern matching should work only against extensions registered with "spring.mvc.contentnegotiation.media-types.*".\par
spring.mvc.pathmatch.use-suffix-pattern=false # Whether to use suffix pattern match (".*") when matching patterns to requests.\par
spring.mvc.servlet.load-on-startup=-1 # Load on startup priority of the dispatcher servlet.\par
spring.mvc.static-path-pattern=/** # Path pattern used for static resources.\par
spring.mvc.throw-exception-if-no-handler-found=false # Whether a "NoHandlerFoundException" should be thrown if no Handler was found to process a request.\par
spring.mvc.view.prefix= # Spring MVC view prefix.\par
spring.mvc.view.suffix= # Spring MVC view suffix.\par
\par
# SPRING RESOURCES HANDLING (ResourceProperties)\par
spring.resources.add-mappings=true # Whether to enable default resource handling.\par
spring.resources.cache.cachecontrol.cache-private= # Indicate that the response message is intended for a single user and must not be stored by a shared cache.\par
spring.resources.cache.cachecontrol.cache-public= # Indicate that any cache may store the response.\par
spring.resources.cache.cachecontrol.max-age= # Maximum time the response should be cached, in seconds if no duration suffix is not specified.\par
spring.resources.cache.cachecontrol.must-revalidate= # Indicate that once it has become stale, a cache must not use the response without re-validating it with the server.\par
spring.resources.cache.cachecontrol.no-cache= # Indicate that the cached response can be reused only if re-validated with the server.\par
spring.resources.cache.cachecontrol.no-store= # Indicate to not cache the response in any case.\par
spring.resources.cache.cachecontrol.no-transform= # Indicate intermediaries (caches and others) that they should not transform the response content.\par
spring.resources.cache.cachecontrol.proxy-revalidate= # Same meaning as the "must-revalidate" directive, except that it does not apply to private caches.\par
spring.resources.cache.cachecontrol.s-max-age= # Maximum time the response should be cached by shared caches, in seconds if no duration suffix is not specified.\par
spring.resources.cache.cachecontrol.stale-if-error= # Maximum time the response may be used when errors are encountered, in seconds if no duration suffix is not specified.\par
spring.resources.cache.cachecontrol.stale-while-revalidate= # Maximum time the response can be served after it becomes stale, in seconds if no duration suffix is not specified.\par
spring.resources.cache.period= # Cache period for the resources served by the resource handler. If a duration suffix is not specified, seconds will be used.\par
spring.resources.chain.cache=true # Whether to enable caching in the Resource chain.\par
spring.resources.chain.enabled= # Whether to enable the Spring Resource Handling chain. By default, disabled unless at least one strategy has been enabled.\par
spring.resources.chain.gzipped=false # Whether to enable resolution of already gzipped resources.\par
spring.resources.chain.html-application-cache=false # Whether to enable HTML5 application cache manifest rewriting.\par
spring.resources.chain.strategy.content.enabled=false # Whether to enable the content Version Strategy.\par
spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the content Version Strategy.\par
spring.resources.chain.strategy.fixed.enabled=false # Whether to enable the fixed Version Strategy.\par
spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the fixed Version Strategy.\par
spring.resources.chain.strategy.fixed.version= # Version string to use for the fixed Version Strategy.\par
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.\par
\par
# SPRING SESSION (SessionProperties)\par
spring.session.store-type= # Session store type.\par
spring.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.\par
spring.session.servlet.filter-order=-2147483598 # Session repository filter order.\par
spring.session.servlet.filter-dispatcher-types=async,error,request # Session repository filter dispatcher types.\par
\par
# SPRING SESSION HAZELCAST (HazelcastSessionProperties)\par
spring.session.hazelcast.flush-mode=on-save # Sessions flush mode.\par
spring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.\par
\par
# SPRING SESSION JDBC (JdbcSessionProperties)\par
spring.session.jdbc.cleanup-cron=0 * * * * * # Cron expression for expired session cleanup job.\par
spring.session.jdbc.initialize-schema=embedded # Database schema initialization mode.\par
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\par
spring.session.jdbc.table-name=SPRING_SESSION # Name of the database table used to store sessions.\par
\par
# SPRING SESSION MONGODB (MongoSessionProperties)\par
spring.session.mongodb.collection-name=sessions # Collection name used to store sessions.\par
\par
# SPRING SESSION REDIS (RedisSessionProperties)\par
spring.session.redis.cleanup-cron=0 * * * * * # Cron expression for expired session cleanup job.\par
spring.session.redis.flush-mode=on-save # Sessions flush mode.\par
spring.session.redis.namespace=spring:session # Namespace for keys used to store sessions.\par
\par
# THYMELEAF (ThymeleafAutoConfiguration)\par
spring.thymeleaf.cache=true # Whether to enable template caching.\par
spring.thymeleaf.check-template=true # Whether to check that the template exists before rendering it.\par
spring.thymeleaf.check-template-location=true # Whether to check that the templates location exists.\par
spring.thymeleaf.enabled=true # Whether to enable Thymeleaf view resolution for Web frameworks.\par
spring.thymeleaf.enable-spring-el-compiler=false # Enable the SpringEL compiler in SpringEL expressions.\par
spring.thymeleaf.encoding=UTF-8 # Template files encoding.\par
spring.thymeleaf.excluded-view-names= # Comma-separated list of view names (patterns allowed) that should be excluded from resolution.\par
spring.thymeleaf.mode=HTML # Template mode to be applied to templates. See also Thymeleaf's TemplateMode enum.\par
spring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.\par
spring.thymeleaf.reactive.chunked-mode-view-names= # Comma-separated list of view names (patterns allowed) that should be the only ones executed in CHUNKED mode when a max chunk size is set.\par
spring.thymeleaf.reactive.full-mode-view-names= # Comma-separated list of view names (patterns allowed) that should be executed in FULL mode even if a max chunk size is set.\par
spring.thymeleaf.reactive.max-chunk-size=0 # Maximum size of data buffers used for writing to the response, in bytes.\par
spring.thymeleaf.reactive.media-types= # Media types supported by the view technology.\par
spring.thymeleaf.servlet.content-type=text/html # Content-Type value written to HTTP responses.\par
spring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.\par
spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.\par
spring.thymeleaf.view-names= # Comma-separated list of view names (patterns allowed) that can be resolved.\par
\par
# SPRING WEBFLUX (WebFluxProperties)\par
spring.webflux.date-format= # Date format to use. For instance, `dd/MM/yyyy`.\par
spring.webflux.static-path-pattern=/** # Path pattern used for static resources.\par
\par
# SPRING WEB SERVICES (WebServicesProperties)\par
spring.webservices.path=/services # Path that serves as the base URI for the services.\par
spring.webservices.servlet.init= # Servlet init parameters to pass to Spring Web Services.\par
spring.webservices.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.\par
spring.webservices.wsdl-locations= # Comma-separated list of locations of WSDLs and accompanying XSDs to be exposed as beans.\par
\par
\par
\par
# ----------------------------------------\par
# SECURITY PROPERTIES\par
# ----------------------------------------\par
# SECURITY (SecurityProperties)\par
spring.security.filter.order=-100 # Security filter chain order.\par
spring.security.filter.dispatcher-types=async,error,request # Security filter chain dispatcher types.\par
spring.security.user.name=user # Default user name.\par
spring.security.user.password= # Password for the default user name.\par
spring.security.user.roles= # Granted roles for the default user name.\par
\par
# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)\par
spring.security.oauth2.client.provider.*= # OAuth provider details.\par
spring.security.oauth2.client.registration.*= # OAuth client registrations.\par
\par
# ----------------------------------------\par
# DATA PROPERTIES\par
# ----------------------------------------\par
\par
# FLYWAY (FlywayProperties)\par
spring.flyway.baseline-description= #\par
spring.flyway.baseline-on-migrate= #\par
spring.flyway.baseline-version=1 # Version to start migration\par
spring.flyway.check-location=true # Whether to check that migration scripts location exists.\par
spring.flyway.clean-disabled= #\par
spring.flyway.clean-on-validation-error= #\par
spring.flyway.dry-run-output= #\par
spring.flyway.enabled=true # Whether to enable flyway.\par
spring.flyway.encoding= #\par
spring.flyway.error-handlers= #\par
spring.flyway.group= #\par
spring.flyway.ignore-future-migrations= #\par
spring.flyway.ignore-missing-migrations= #\par
spring.flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.\par
spring.flyway.installed-by= #\par
spring.flyway.locations=classpath:db/migration # The locations of migrations scripts.\par
spring.flyway.mixed= #\par
spring.flyway.out-of-order= #\par
spring.flyway.password= # JDBC password to use if you want Flyway to create its own DataSource.\par
spring.flyway.placeholder-prefix= #\par
spring.flyway.placeholder-replacement= #\par
spring.flyway.placeholder-suffix= #\par
spring.flyway.placeholders.*= #\par
spring.flyway.repeatable-sql-migration-prefix= #\par
spring.flyway.schemas= # schemas to update\par
spring.flyway.skip-default-callbacks= #\par
spring.flyway.skip-default-resolvers= #\par
spring.flyway.sql-migration-prefix=V #\par
spring.flyway.sql-migration-separator= #\par
spring.flyway.sql-migration-suffix=.sql #\par
spring.flyway.sql-migration-suffixes= #\par
spring.flyway.table= #\par
spring.flyway.target= #\par
spring.flyway.undo-sql-migration-prefix= #\par
spring.flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.\par
spring.flyway.user= # Login user of the database to migrate.\par
spring.flyway.validate-on-migrate= #\par
\par
# LIQUIBASE (LiquibaseProperties)\par
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.\par
spring.liquibase.check-change-log-location=true # Whether to check that the change log location exists.\par
spring.liquibase.contexts= # Comma-separated list of runtime contexts to use.\par
spring.liquibase.default-schema= # Default database schema.\par
spring.liquibase.drop-first=false # Whether to first drop the database schema.\par
spring.liquibase.enabled=true # Whether to enable Liquibase support.\par
spring.liquibase.labels= # Comma-separated list of runtime labels to use.\par
spring.liquibase.parameters.*= # Change log parameters.\par
spring.liquibase.password= # Login password of the database to migrate.\par
spring.liquibase.rollback-file= # File to which rollback SQL is written when an update is performed.\par
spring.liquibase.url= # JDBC URL of the database to migrate. If not set, the primary configured data source is used.\par
spring.liquibase.user= # Login user of the database to migrate.\par
\par
# COUCHBASE (CouchbaseProperties)\par
spring.couchbase.bootstrap-hosts= # Couchbase nodes (host or IP address) to bootstrap from.\par
spring.couchbase.bucket.name=default # Name of the bucket to connect to.\par
spring.couchbase.bucket.password=  # Password of the bucket.\par
spring.couchbase.env.endpoints.key-value=1 # Number of sockets per node against the key/value service.\par
spring.couchbase.env.endpoints.queryservice.min-endpoints=1 # Minimum number of sockets per node.\par
spring.couchbase.env.endpoints.queryservice.max-endpoints=1 # Maximum number of sockets per node.\par
spring.couchbase.env.endpoints.viewservice.min-endpoints=1 # Minimum number of sockets per node.\par
spring.couchbase.env.endpoints.viewservice.max-endpoints=1 # Maximum number of sockets per node.\par
spring.couchbase.env.ssl.enabled= # Whether to enable SSL support. Enabled automatically if a "keyStore" is provided unless specified otherwise.\par
spring.couchbase.env.ssl.key-store= # Path to the JVM key store that holds the certificates.\par
spring.couchbase.env.ssl.key-store-password= # Password used to access the key store.\par
spring.couchbase.env.timeouts.connect=5000ms # Bucket connections timeouts.\par
spring.couchbase.env.timeouts.key-value=2500ms # Blocking operations performed on a specific key timeout.\par
spring.couchbase.env.timeouts.query=7500ms # N1QL query operations timeout.\par
spring.couchbase.env.timeouts.socket-connect=1000ms # Socket connect connections timeout.\par
spring.couchbase.env.timeouts.view=7500ms # Regular and geospatial view operations timeout.\par
\par
# DAO (PersistenceExceptionTranslationAutoConfiguration)\par
spring.dao.exceptiontranslation.enabled=true # Whether to enable the PersistenceExceptionTranslationPostProcessor.\par
\par
# CASSANDRA (CassandraProperties)\par
spring.data.cassandra.cluster-name= # Name of the Cassandra cluster.\par
spring.data.cassandra.compression=none # Compression supported by the Cassandra binary protocol.\par
spring.data.cassandra.connect-timeout= # Socket option: connection time out.\par
spring.data.cassandra.consistency-level= # Queries consistency level.\par
spring.data.cassandra.contact-points=localhost # Cluster node addresses.\par
spring.data.cassandra.fetch-size= # Queries default fetch size.\par
spring.data.cassandra.keyspace-name= # Keyspace name to use.\par
spring.data.cassandra.load-balancing-policy= # Class name of the load balancing policy.\par
spring.data.cassandra.port= # Port of the Cassandra server.\par
spring.data.cassandra.password= # Login password of the server.\par
spring.data.cassandra.pool.heartbeat-interval=30s # Heartbeat interval after which a message is sent on an idle connection to make sure it's still alive. If a duration suffix is not specified, seconds will be used.\par
spring.data.cassandra.pool.idle-timeout=120s # Idle timeout before an idle connection is removed. If a duration suffix is not specified, seconds will be used.\par
spring.data.cassandra.pool.max-queue-size=256 # Maximum number of requests that get queued if no connection is available.\par
spring.data.cassandra.pool.pool-timeout=5000ms # Pool timeout when trying to acquire a connection from a host's pool.\par
spring.data.cassandra.read-timeout= # Socket option: read time out.\par
spring.data.cassandra.reconnection-policy= # Reconnection policy class.\par
spring.data.cassandra.repositories.type=auto # Type of Cassandra repositories to enable.\par
spring.data.cassandra.retry-policy= # Class name of the retry policy.\par
spring.data.cassandra.serial-consistency-level= # Queries serial consistency level.\par
spring.data.cassandra.schema-action=none # Schema action to take at startup.\par
spring.data.cassandra.ssl=false # Enable SSL support.\par
spring.data.cassandra.username= # Login user of the server.\par
\par
# DATA COUCHBASE (CouchbaseDataProperties)\par
spring.data.couchbase.auto-index=false # Automatically create views and indexes.\par
spring.data.couchbase.consistency=read-your-own-writes # Consistency to apply by default on generated queries.\par
spring.data.couchbase.repositories.type=auto # Type of Couchbase repositories to enable.\par
\par
# ELASTICSEARCH (ElasticsearchProperties)\par
spring.data.elasticsearch.cluster-name=elasticsearch # Elasticsearch cluster name.\par
spring.data.elasticsearch.cluster-nodes= # Comma-separated list of cluster node addresses.\par
spring.data.elasticsearch.properties.*= # Additional properties used to configure the client.\par
spring.data.elasticsearch.repositories.enabled=true # Whether to enable Elasticsearch repositories.\par
\par
# DATA LDAP\par
spring.data.ldap.repositories.enabled=true # Whether to enable LDAP repositories.\par
\par
# MONGODB (MongoProperties)\par
spring.data.mongodb.authentication-database= # Authentication database name.\par
spring.data.mongodb.database= # Database name.\par
spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.\par
spring.data.mongodb.grid-fs-database= # GridFS database name.\par
spring.data.mongodb.host= # Mongo server host. Cannot be set with URI.\par
spring.data.mongodb.password= # Login password of the mongo server. Cannot be set with URI.\par
spring.data.mongodb.port= # Mongo server port. Cannot be set with URI.\par
spring.data.mongodb.repositories.type=auto # Type of Mongo repositories to enable.\par
spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.\par
spring.data.mongodb.username= # Login user of the mongo server. Cannot be set with URI.\par
\par
# DATA REDIS\par
spring.data.redis.repositories.enabled=true # Whether to enable Redis repositories.\par
\par
# NEO4J (Neo4jProperties)\par
spring.data.neo4j.auto-index=none # Auto index mode.\par
spring.data.neo4j.embedded.enabled=true # Whether to enable embedded mode if the embedded driver is available.\par
spring.data.neo4j.open-in-view=true # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.\par
spring.data.neo4j.password= # Login password of the server.\par
spring.data.neo4j.repositories.enabled=true # Whether to enable Neo4j repositories.\par
spring.data.neo4j.uri= # URI used by the driver. Auto-detected by default.\par
spring.data.neo4j.username= # Login user of the server.\par
\par
# DATA REST (RepositoryRestProperties)\par
spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.\par
spring.data.rest.default-media-type= # Content type to use as a default when none is specified.\par
spring.data.rest.default-page-size= # Default size of pages.\par
spring.data.rest.detection-strategy=default # Strategy to use to determine which repositories get exposed.\par
spring.data.rest.enable-enum-translation= # Whether to enable enum value translation through the Spring Data REST default resource bundle.\par
spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.\par
spring.data.rest.max-page-size= # Maximum size of pages.\par
spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.\par
spring.data.rest.return-body-on-create= # Whether to return a response body after creating an entity.\par
spring.data.rest.return-body-on-update= # Whether to return a response body after updating an entity.\par
spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.\par
\par
# SOLR (SolrProperties)\par
spring.data.solr.host=http://127.0.0.1:8983/solr # Solr host. Ignored if "zk-host" is set.\par
spring.data.solr.repositories.enabled=true # Whether to enable Solr repositories.\par
spring.data.solr.zk-host= # ZooKeeper host address in the form HOST:PORT.\par
\par
# DATA WEB (SpringDataWebProperties)\par
spring.data.web.pageable.default-page-size=20 # Default page size.\par
spring.data.web.pageable.max-page-size=2000 # Maximum page size to be accepted.\par
spring.data.web.pageable.one-indexed-parameters=false # Whether to expose and assume 1-based page number indexes.\par
spring.data.web.pageable.page-parameter=page # Page index parameter name.\par
spring.data.web.pageable.prefix= # General prefix to be prepended to the page number and page size parameters.\par
spring.data.web.pageable.qualifier-delimiter=_ # Delimiter to be used between the qualifier and the actual page number and size properties.\par
spring.data.web.pageable.size-parameter=size # Page size parameter name.\par
spring.data.web.sort.sort-parameter=sort # Sort parameter name.\par
\par
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)\par
spring.datasource.continue-on-error=false # Whether to stop if an error occurs while initializing the database.\par
spring.datasource.data= # Data (DML) script resource references.\par
spring.datasource.data-username= # Username of the database to execute DML scripts (if different).\par
spring.datasource.data-password= # Password of the database to execute DML scripts (if different).\par
spring.datasource.dbcp2.*= # Commons DBCP2 specific settings\par
spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.\par
spring.datasource.generate-unique-name=false # Whether to generate a random datasource name.\par
spring.datasource.hikari.*= # Hikari specific settings\par
spring.datasource.initialization-mode=embedded # Initialize the datasource with available DDL and DML scripts.\par
spring.datasource.jmx-enabled=false # Whether to enable JMX support (if provided by the underlying pool).\par
spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.\par
spring.datasource.name= # Name of the datasource. Default to "testdb" when using an embedded database.\par
spring.datasource.password= # Login password of the database.\par
spring.datasource.platform=all # Platform to use in the DDL or DML scripts (such as schema-$\{platform\}.sql or data-$\{platform\}.sql).\par
spring.datasource.schema= # Schema (DDL) script resource references.\par
spring.datasource.schema-username= # Username of the database to execute DDL scripts (if different).\par
spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).\par
spring.datasource.separator=; # Statement separator in SQL initialization scripts.\par
spring.datasource.sql-script-encoding= # SQL scripts encoding.\par
spring.datasource.tomcat.*= # Tomcat datasource specific settings\par
spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.\par
spring.datasource.url= # JDBC URL of the database.\par
spring.datasource.username= # Login username of the database.\par
spring.datasource.xa.data-source-class-name= # XA datasource fully qualified name.\par
spring.datasource.xa.properties= # Properties to pass to the XA data source.\par
\par
# JEST (Elasticsearch HTTP client) (JestProperties)\par
spring.elasticsearch.jest.connection-timeout=3s # Connection timeout.\par
spring.elasticsearch.jest.multi-threaded=true # Whether to enable connection requests from multiple execution threads.\par
spring.elasticsearch.jest.password= # Login password.\par
spring.elasticsearch.jest.proxy.host= # Proxy host the HTTP client should use.\par
spring.elasticsearch.jest.proxy.port= # Proxy port the HTTP client should use.\par
spring.elasticsearch.jest.read-timeout=3s # Read timeout.\par
spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use.\par
spring.elasticsearch.jest.username= # Login username.\par
\par
# H2 Web Console (H2ConsoleProperties)\par
spring.h2.console.enabled=false # Whether to enable the console.\par
spring.h2.console.path=/h2-console # Path at which the console is available.\par
spring.h2.console.settings.trace=false # Whether to enable trace output.\par
spring.h2.console.settings.web-allow-others=false # Whether to enable remote access.\par
\par
# InfluxDB (InfluxDbProperties)\par
spring.influx.password= # Login password.\par
spring.influx.url= # URL of the InfluxDB instance to which to connect.\par
spring.influx.user= # Login user.\par
\par
# JOOQ (JooqProperties)\par
spring.jooq.sql-dialect= # SQL dialect to use. Auto-detected by default.\par
\par
# JDBC (JdbcProperties)\par
spring.jdbc.template.fetch-size=-1 # Number of rows that should be fetched from the database when more rows are needed.\par
spring.jdbc.template.max-rows=-1 # Maximum number of rows.\par
spring.jdbc.template.query-timeout= # Query timeout. Default is to use the JDBC driver's default configuration. If a duration suffix is not specified, seconds will be used.\par
\par
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)\par
spring.data.jpa.repositories.enabled=true # Whether to enable JPA repositories.\par
spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.\par
spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.\par
spring.jpa.generate-ddl=false # Whether to initialize the schema on startup.\par
spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".\par
spring.jpa.hibernate.naming.implicit-strategy= # Fully qualified name of the implicit naming strategy.\par
spring.jpa.hibernate.naming.physical-strategy= # Fully qualified name of the physical naming strategy.\par
spring.jpa.hibernate.use-new-id-generator-mappings= # Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.\par
spring.jpa.mapping-resources= # Mapping resources (equivalent to "mapping-file" entries in persistence.xml).\par
spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.\par
spring.jpa.properties.*= # Additional native properties to set on the JPA provider.\par
spring.jpa.show-sql=false # Whether to enable logging of SQL statements.\par
\par
# JTA (JtaAutoConfiguration)\par
spring.jta.enabled=true # Whether to enable JTA support.\par
spring.jta.log-dir= # Transaction logs directory.\par
spring.jta.transaction-manager-id= # Transaction manager unique identifier.\par
\par
# ATOMIKOS (AtomikosProperties)\par
spring.jta.atomikos.connectionfactory.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.\par
spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag=true # Whether to ignore the transacted flag when creating session.\par
spring.jta.atomikos.connectionfactory.local-transaction-mode=false # Whether local transactions are desired.\par
spring.jta.atomikos.connectionfactory.maintenance-interval=60 # The time, in seconds, between runs of the pool's maintenance thread.\par
spring.jta.atomikos.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\par
spring.jta.atomikos.connectionfactory.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.\par
spring.jta.atomikos.connectionfactory.max-pool-size=1 # The maximum size of the pool.\par
spring.jta.atomikos.connectionfactory.min-pool-size=1 # The minimum size of the pool.\par
spring.jta.atomikos.connectionfactory.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.\par
spring.jta.atomikos.connectionfactory.unique-resource-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.\par
spring.jta.atomikos.connectionfactory.xa-connection-factory-class-name= # Vendor-specific implementation of XAConnectionFactory.\par
spring.jta.atomikos.connectionfactory.xa-properties= # Vendor-specific XA properties.\par
spring.jta.atomikos.datasource.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.\par
spring.jta.atomikos.datasource.concurrent-connection-validation= # Whether to use concurrent connection validation.\par
spring.jta.atomikos.datasource.default-isolation-level= # Default isolation level of connections provided by the pool.\par
spring.jta.atomikos.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.\par
spring.jta.atomikos.datasource.maintenance-interval=60 # The time, in seconds, between runs of the pool's maintenance thread.\par
spring.jta.atomikos.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\par
spring.jta.atomikos.datasource.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.\par
spring.jta.atomikos.datasource.max-pool-size=1 # The maximum size of the pool.\par
spring.jta.atomikos.datasource.min-pool-size=1 # The minimum size of the pool.\par
spring.jta.atomikos.datasource.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.\par
spring.jta.atomikos.datasource.test-query= # SQL query or statement used to validate a connection before returning it.\par
spring.jta.atomikos.datasource.unique-resource-name=dataSource # The unique name used to identify the resource during recovery.\par
spring.jta.atomikos.datasource.xa-data-source-class-name= # Vendor-specific implementation of XAConnectionFactory.\par
spring.jta.atomikos.datasource.xa-properties= # Vendor-specific XA properties.\par
spring.jta.atomikos.properties.allow-sub-transactions=true # Specify whether sub-transactions are allowed.\par
spring.jta.atomikos.properties.checkpoint-interval=500 # Interval between checkpoints, expressed as the number of log writes between two checkpoints.\par
spring.jta.atomikos.properties.default-jta-timeout=10000ms # Default timeout for JTA transactions.\par
spring.jta.atomikos.properties.default-max-wait-time-on-shutdown=9223372036854775807 # How long should normal shutdown (no-force) wait for transactions to complete.\par
spring.jta.atomikos.properties.enable-logging=true # Whether to enable disk logging.\par
spring.jta.atomikos.properties.force-shutdown-on-vm-exit=false # Whether a VM shutdown should trigger forced shutdown of the transaction core.\par
spring.jta.atomikos.properties.log-base-dir= # Directory in which the log files should be stored.\par
spring.jta.atomikos.properties.log-base-name=tmlog # Transactions log file base name.\par
spring.jta.atomikos.properties.max-actives=50 # Maximum number of active transactions.\par
spring.jta.atomikos.properties.max-timeout=300000ms # Maximum timeout that can be allowed for transactions.\par
spring.jta.atomikos.properties.recovery.delay=10000ms # Delay between two recovery scans.\par
spring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay=86400000ms # Delay after which recovery can cleanup pending ('orphaned') log entries.\par
spring.jta.atomikos.properties.recovery.max-retries=5 # Number of retry attempts to commit the transaction before throwing an exception.\par
spring.jta.atomikos.properties.recovery.retry-interval=10000ms # Delay between retry attempts.\par
spring.jta.atomikos.properties.serial-jta-transactions=true # Whether sub-transactions should be joined when possible.\par
spring.jta.atomikos.properties.service= # Transaction manager implementation that should be started.\par
spring.jta.atomikos.properties.threaded-two-phase-commit=false # Whether to use different (and concurrent) threads for two-phase commit on the participating resources.\par
spring.jta.atomikos.properties.transaction-manager-unique-name= # The transaction manager's unique name.\par
\par
# BITRONIX\par
spring.jta.bitronix.connectionfactory.acquire-increment=1 # Number of connections to create when growing the pool.\par
spring.jta.bitronix.connectionfactory.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.\par
spring.jta.bitronix.connectionfactory.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.\par
spring.jta.bitronix.connectionfactory.allow-local-transactions=true # Whether the transaction manager should allow mixing XA and non-XA transactions.\par
spring.jta.bitronix.connectionfactory.apply-transaction-timeout=false # Whether the transaction timeout should be set on the XAResource when it is enlisted.\par
spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled=true # Whether resources should be enlisted and delisted automatically.\par
spring.jta.bitronix.connectionfactory.cache-producers-consumers=true # Whether producers and consumers should be cached.\par
spring.jta.bitronix.connectionfactory.class-name= # Underlying implementation class name of the XA resource.\par
spring.jta.bitronix.connectionfactory.defer-connection-release=true # Whether the provider can run many transactions on the same connection and supports transaction interleaving.\par
spring.jta.bitronix.connectionfactory.disabled= # Whether this resource is disabled, meaning it's temporarily forbidden to acquire a connection from its pool.\par
spring.jta.bitronix.connectionfactory.driver-properties= # Properties that should be set on the underlying implementation.\par
spring.jta.bitronix.connectionfactory.failed= # Mark this resource producer as failed.\par
spring.jta.bitronix.connectionfactory.ignore-recovery-failures=false # Whether recovery failures should be ignored.\par
spring.jta.bitronix.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\par
spring.jta.bitronix.connectionfactory.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.\par
spring.jta.bitronix.connectionfactory.min-pool-size=0 # The minimum size of the pool.\par
spring.jta.bitronix.connectionfactory.password= # The password to use to connect to the JMS provider.\par
spring.jta.bitronix.connectionfactory.share-transaction-connections=false #  Whether connections in the ACCESSIBLE state can be shared within the context of a transaction.\par
spring.jta.bitronix.connectionfactory.test-connections=true # Whether connections should be tested when acquired from the pool.\par
spring.jta.bitronix.connectionfactory.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).\par
spring.jta.bitronix.connectionfactory.unique-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.\par
spring.jta.bitronix.connectionfactory.use-tm-join=true # Whether TMJOIN should be used when starting XAResources.\par
spring.jta.bitronix.connectionfactory.user= # The user to use to connect to the JMS provider.\par
spring.jta.bitronix.datasource.acquire-increment=1 # Number of connections to create when growing the pool.\par
spring.jta.bitronix.datasource.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.\par
spring.jta.bitronix.datasource.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.\par
spring.jta.bitronix.datasource.allow-local-transactions=true # Whether the transaction manager should allow mixing XA and non-XA transactions.\par
spring.jta.bitronix.datasource.apply-transaction-timeout=false # Whether the transaction timeout should be set on the XAResource when it is enlisted.\par
spring.jta.bitronix.datasource.automatic-enlisting-enabled=true # Whether resources should be enlisted and delisted automatically.\par
spring.jta.bitronix.datasource.class-name= # Underlying implementation class name of the XA resource.\par
spring.jta.bitronix.datasource.cursor-holdability= # The default cursor holdability for connections.\par
spring.jta.bitronix.datasource.defer-connection-release=true # Whether the database can run many transactions on the same connection and supports transaction interleaving.\par
spring.jta.bitronix.datasource.disabled= # Whether this resource is disabled, meaning it's temporarily forbidden to acquire a connection from its pool.\par
spring.jta.bitronix.datasource.driver-properties= # Properties that should be set on the underlying implementation.\par
spring.jta.bitronix.datasource.enable-jdbc4-connection-test= # Whether Connection.isValid() is called when acquiring a connection from the pool.\par
spring.jta.bitronix.datasource.failed= # Mark this resource producer as failed.\par
spring.jta.bitronix.datasource.ignore-recovery-failures=false # Whether recovery failures should be ignored.\par
spring.jta.bitronix.datasource.isolation-level= # The default isolation level for connections.\par
spring.jta.bitronix.datasource.local-auto-commit= # The default auto-commit mode for local transactions.\par
spring.jta.bitronix.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.\par
spring.jta.bitronix.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.\par
spring.jta.bitronix.datasource.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.\par
spring.jta.bitronix.datasource.min-pool-size=0 # The minimum size of the pool.\par
spring.jta.bitronix.datasource.prepared-statement-cache-size=0 # The target size of the prepared statement cache. 0 disables the cache.\par
spring.jta.bitronix.datasource.share-transaction-connections=false #  Whether connections in the ACCESSIBLE state can be shared within the context of a transaction.\par
spring.jta.bitronix.datasource.test-query= # SQL query or statement used to validate a connection before returning it.\par
spring.jta.bitronix.datasource.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, and always last is Integer.MAX_VALUE).\par
spring.jta.bitronix.datasource.unique-name=dataSource # The unique name used to identify the resource during recovery.\par
spring.jta.bitronix.datasource.use-tm-join=true # Whether TMJOIN should be used when starting XAResources.\par
spring.jta.bitronix.properties.allow-multiple-lrc=false # Whether to allow multiple LRC resources to be enlisted into the same transaction.\par
spring.jta.bitronix.properties.asynchronous2-pc=false # Whether to enable asynchronously execution of two phase commit.\par
spring.jta.bitronix.properties.background-recovery-interval-seconds=60 # Interval in seconds at which to run the recovery process in the background.\par
spring.jta.bitronix.properties.current-node-only-recovery=true # Whether to recover only the current node.\par
spring.jta.bitronix.properties.debug-zero-resource-transaction=false # Whether to log the creation and commit call stacks of transactions executed without a single enlisted resource.\par
spring.jta.bitronix.properties.default-transaction-timeout=60 # Default transaction timeout, in seconds.\par
spring.jta.bitronix.properties.disable-jmx=false # Whether to enable JMX support.\par
spring.jta.bitronix.properties.exception-analyzer= # Set the fully qualified name of the exception analyzer implementation to use.\par
spring.jta.bitronix.properties.filter-log-status=false # Whether to enable filtering of logs so that only mandatory logs are written.\par
spring.jta.bitronix.properties.force-batching-enabled=true #  Whether disk forces are batched.\par
spring.jta.bitronix.properties.forced-write-enabled=true # Whether logs are forced to disk.\par
spring.jta.bitronix.properties.graceful-shutdown-interval=60 # Maximum amount of seconds the TM waits for transactions to get done before aborting them at shutdown time.\par
spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name= # JNDI name of the TransactionSynchronizationRegistry.\par
spring.jta.bitronix.properties.jndi-user-transaction-name= # JNDI name of the UserTransaction.\par
spring.jta.bitronix.properties.journal=disk # Name of the journal. Can be 'disk', 'null', or a class name.\par
spring.jta.bitronix.properties.log-part1-filename=btm1.tlog # Name of the first fragment of the journal.\par
spring.jta.bitronix.properties.log-part2-filename=btm2.tlog # Name of the second fragment of the journal.\par
spring.jta.bitronix.properties.max-log-size-in-mb=2 # Maximum size in megabytes of the journal fragments.\par
spring.jta.bitronix.properties.resource-configuration-filename= # ResourceLoader configuration file name.\par
spring.jta.bitronix.properties.server-id= # ASCII ID that must uniquely identify this TM instance. Defaults to the machine's IP address.\par
spring.jta.bitronix.properties.skip-corrupted-logs=false # Skip corrupted transactions log entries.\par
spring.jta.bitronix.properties.warn-about-zero-resource-transaction=true # Whether to log a warning for transactions executed without a single enlisted resource.\par
\par
# NARAYANA (NarayanaProperties)\par
spring.jta.narayana.default-timeout=60s # Transaction timeout. If a duration suffix is not specified, seconds will be used.\par
spring.jta.narayana.expiry-scanners=com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner # Comma-separated list of expiry scanners.\par
spring.jta.narayana.log-dir= # Transaction object store directory.\par
spring.jta.narayana.one-phase-commit=true # Whether to enable one phase commit optimization.\par
spring.jta.narayana.periodic-recovery-period=120s # Interval in which periodic recovery scans are performed. If a duration suffix is not specified, seconds will be used.\par
spring.jta.narayana.recovery-backoff-period=10s # Back off period between first and second phases of the recovery scan. If a duration suffix is not specified, seconds will be used.\par
spring.jta.narayana.recovery-db-pass= # Database password to be used by the recovery manager.\par
spring.jta.narayana.recovery-db-user= # Database username to be used by the recovery manager.\par
spring.jta.narayana.recovery-jms-pass= # JMS password to be used by the recovery manager.\par
spring.jta.narayana.recovery-jms-user= # JMS username to be used by the recovery manager.\par
spring.jta.narayana.recovery-modules= # Comma-separated list of recovery modules.\par
spring.jta.narayana.transaction-manager-id=1 # Unique transaction manager id.\par
spring.jta.narayana.xa-resource-orphan-filters= # Comma-separated list of orphan filters.\par
\par
# EMBEDDED MONGODB (EmbeddedMongoProperties)\par
spring.mongodb.embedded.features=sync_delay # Comma-separated list of features to enable.\par
spring.mongodb.embedded.storage.database-dir= # Directory used for data storage.\par
spring.mongodb.embedded.storage.oplog-size= # Maximum size of the oplog, in megabytes.\par
spring.mongodb.embedded.storage.repl-set-name= # Name of the replica set.\par
spring.mongodb.embedded.version=3.2.2 # Version of Mongo to use.\par
\par
# REDIS (RedisProperties)\par
spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.\par
spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.\par
spring.redis.database=0 # Database index used by the connection factory.\par
spring.redis.url= # Connection URL. Overrides host, port, and password. User is ignored. Example: redis://user:password@example.com:6379\par
spring.redis.host=localhost # Redis server host.\par
spring.redis.jedis.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.\par
spring.redis.jedis.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.\par
spring.redis.jedis.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.\par
spring.redis.jedis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.\par
spring.redis.lettuce.pool.max-active=8 # Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.\par
spring.redis.lettuce.pool.max-idle=8 # Maximum number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.\par
spring.redis.lettuce.pool.max-wait=-1ms # Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.\par
spring.redis.lettuce.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.\par
spring.redis.lettuce.shutdown-timeout=100ms # Shutdown timeout.\par
spring.redis.password= # Login password of the redis server.\par
spring.redis.port=6379 # Redis server port.\par
spring.redis.sentinel.master= # Name of the Redis server.\par
spring.redis.sentinel.nodes= # Comma-separated list of "host:port" pairs.\par
spring.redis.ssl=false # Whether to enable SSL support.\par
spring.redis.timeout= # Connection timeout.\par
\par
# TRANSACTION (TransactionProperties)\par
spring.transaction.default-timeout= # Default transaction timeout. If a duration suffix is not specified, seconds will be used.\par
spring.transaction.rollback-on-commit-failure= # Whether to roll back on commit failures.\par
\par
\par
\par
# ----------------------------------------\par
# INTEGRATION PROPERTIES\par
# ----------------------------------------\par
\par
# ACTIVEMQ (ActiveMQProperties)\par
spring.activemq.broker-url= # URL of the ActiveMQ broker. Auto-generated by default.\par
spring.activemq.close-timeout=15s # Time to wait before considering a close complete.\par
spring.activemq.in-memory=true # Whether the default broker URL should be in memory. Ignored if an explicit broker has been specified.\par
spring.activemq.non-blocking-redelivery=false # Whether to stop message delivery before re-delivering messages from a rolled back transaction. This implies that message order is not preserved when this is enabled.\par
spring.activemq.password= # Login password of the broker.\par
spring.activemq.send-timeout=0ms # Time to wait on message sends for a response. Set it to 0 to wait forever.\par
spring.activemq.user= # Login user of the broker.\par
spring.activemq.packages.trust-all= # Whether to trust all packages.\par
spring.activemq.packages.trusted= # Comma-separated list of specific packages to trust (when not trusting all packages).\par
spring.activemq.pool.block-if-full=true # Whether to block when a connection is requested and the pool is full. Set it to false to throw a "JMSException" instead.\par
spring.activemq.pool.block-if-full-timeout=-1ms # Blocking period before throwing an exception if the pool is still full.\par
spring.activemq.pool.create-connection-on-startup=true # Whether to create a connection on startup. Can be used to warm up the pool on startup.\par
spring.activemq.pool.enabled=false # Whether a PooledConnectionFactory should be created, instead of a regular ConnectionFactory.\par
spring.activemq.pool.expiry-timeout=0ms # Connection expiration timeout.\par
spring.activemq.pool.idle-timeout=30s # Connection idle timeout.\par
spring.activemq.pool.max-connections=1 # Maximum number of pooled connections.\par
spring.activemq.pool.maximum-active-session-per-connection=500 # Maximum number of active sessions per connection.\par
spring.activemq.pool.reconnect-on-exception=true # Reset the connection when a "JMSException" occurs.\par
spring.activemq.pool.time-between-expiration-check=-1ms # Time to sleep between runs of the idle connection eviction thread. When negative, no idle connection eviction thread runs.\par
spring.activemq.pool.use-anonymous-producers=true # Whether to use only one anonymous "MessageProducer" instance. Set it to false to create one "MessageProducer" every time one is required.\par
\par
# ARTEMIS (ArtemisProperties)\par
spring.artemis.embedded.cluster-password= # Cluster password. Randomly generated on startup by default.\par
spring.artemis.embedded.data-directory= # Journal file directory. Not necessary if persistence is turned off.\par
spring.artemis.embedded.enabled=true # Whether to enable embedded mode if the Artemis server APIs are available.\par
spring.artemis.embedded.persistent=false # Whether to enable persistent store.\par
spring.artemis.embedded.queues= # Comma-separated list of queues to create on startup.\par
spring.artemis.embedded.server-id= # Server ID. By default, an auto-incremented counter is used.\par
spring.artemis.embedded.topics= # Comma-separated list of topics to create on startup.\par
spring.artemis.host=localhost # Artemis broker host.\par
spring.artemis.mode= # Artemis deployment mode, auto-detected by default.\par
spring.artemis.password= # Login password of the broker.\par
spring.artemis.port=61616 # Artemis broker port.\par
spring.artemis.user= # Login user of the broker.\par
\par
# SPRING BATCH (BatchProperties)\par
spring.batch.initialize-schema=embedded # Database schema initialization mode.\par
spring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.\par
spring.batch.job.names= # Comma-separated list of job names to execute on startup (for instance, `job1,job2`). By default, all Jobs found in the context are executed.\par
spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\par
spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.\par
\par
# SPRING INTEGRATION (IntegrationProperties)\par
spring.integration.jdbc.initialize-schema=embedded # Database schema initialization mode.\par
spring.integration.jdbc.schema=classpath:org/springframework/integration/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\par
\par
# JMS (JmsProperties)\par
spring.jms.jndi-name= # Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.\par
spring.jms.listener.acknowledge-mode= # Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.\par
spring.jms.listener.auto-startup=true # Start the container automatically on startup.\par
spring.jms.listener.concurrency= # Minimum number of concurrent consumers.\par
spring.jms.listener.max-concurrency= # Maximum number of concurrent consumers.\par
spring.jms.pub-sub-domain=false # Whether the default destination type is topic.\par
spring.jms.template.default-destination= # Default destination to use on send and receive operations that do not have a destination parameter.\par
spring.jms.template.delivery-delay= # Delivery delay to use for send calls.\par
spring.jms.template.delivery-mode= # Delivery mode. Enables QoS (Quality of Service) when set.\par
spring.jms.template.priority= # Priority of a message when sending. Enables QoS (Quality of Service) when set.\par
spring.jms.template.qos-enabled= # Whether to enable explicit QoS (Quality of Service) when sending a message.\par
spring.jms.template.receive-timeout= # Timeout to use for receive calls.\par
spring.jms.template.time-to-live= # Time-to-live of a message when sending. Enables QoS (Quality of Service) when set.\par
\par
# APACHE KAFKA (KafkaProperties)\par
spring.kafka.admin.client-id= # ID to pass to the server when making requests. Used for server-side logging.\par
spring.kafka.admin.fail-fast=false # Whether to fail fast if the broker is not available on startup.\par
spring.kafka.admin.properties.*= # Additional admin-specific properties used to configure the client.\par
spring.kafka.admin.ssl.key-password= # Password of the private key in the key store file.\par
spring.kafka.admin.ssl.keystore-location= # Location of the key store file.\par
spring.kafka.admin.ssl.keystore-password= # Store password for the key store file.\par
spring.kafka.admin.ssl.keystore-type= # Type of the key store.\par
spring.kafka.admin.ssl.protocol= # SSL protocol to use.\par
spring.kafka.admin.ssl.truststore-location= # Location of the trust store file.\par
spring.kafka.admin.ssl.truststore-password= # Store password for the trust store file.\par
spring.kafka.admin.ssl.truststore-type= # Type of the trust store.\par
spring.kafka.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.\par
spring.kafka.client-id= # ID to pass to the server when making requests. Used for server-side logging.\par
spring.kafka.consumer.auto-commit-interval= # Frequency with which the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' is set to true.\par
spring.kafka.consumer.auto-offset-reset= # What to do when there is no initial offset in Kafka or if the current offset no longer exists on the server.\par
spring.kafka.consumer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.\par
spring.kafka.consumer.client-id= # ID to pass to the server when making requests. Used for server-side logging.\par
spring.kafka.consumer.enable-auto-commit= # Whether the consumer's offset is periodically committed in the background.\par
spring.kafka.consumer.fetch-max-wait= # Maximum amount of time the server blocks before answering the fetch request if there isn't sufficient data to immediately satisfy the requirement given by "fetch.min.bytes".\par
spring.kafka.consumer.fetch-min-size= # Minimum amount of data, in bytes, the server should return for a fetch request.\par
spring.kafka.consumer.group-id= # Unique string that identifies the consumer group to which this consumer belongs.\par
spring.kafka.consumer.heartbeat-interval= # Expected time between heartbeats to the consumer coordinator.\par
spring.kafka.consumer.key-deserializer= # Deserializer class for keys.\par
spring.kafka.consumer.max-poll-records= # Maximum number of records returned in a single call to poll().\par
spring.kafka.consumer.properties.*= # Additional consumer-specific properties used to configure the client.\par
spring.kafka.consumer.ssl.key-password= # Password of the private key in the key store file.\par
spring.kafka.consumer.ssl.keystore-location= # Location of the key store file.\par
spring.kafka.consumer.ssl.keystore-password= # Store password for the key store file.\par
spring.kafka.consumer.ssl.keystore-type= # Type of the key store.\par
spring.kafka.consumer.ssl.protocol= # SSL protocol to use.\par
spring.kafka.consumer.ssl.truststore-location= # Location of the trust store file.\par
spring.kafka.consumer.ssl.truststore-password= # Store password for the trust store file.\par
spring.kafka.consumer.ssl.truststore-type= # Type of the trust store.\par
spring.kafka.consumer.value-deserializer= # Deserializer class for values.\par
spring.kafka.jaas.control-flag=required # Control flag for login configuration.\par
spring.kafka.jaas.enabled=false # Whether to enable JAAS configuration.\par
spring.kafka.jaas.login-module=com.sun.security.auth.module.Krb5LoginModule # Login module.\par
spring.kafka.jaas.options= # Additional JAAS options.\par
spring.kafka.listener.ack-count= # Number of records between offset commits when ackMode is "COUNT" or "COUNT_TIME".\par
spring.kafka.listener.ack-mode= # Listener AckMode. See the spring-kafka documentation.\par
spring.kafka.listener.ack-time= # Time between offset commits when ackMode is "TIME" or "COUNT_TIME".\par
spring.kafka.listener.client-id= # Prefix for the listener's consumer client.id property.\par
spring.kafka.listener.concurrency= # Number of threads to run in the listener containers.\par
spring.kafka.listener.idle-event-interval= # Time between publishing idle consumer events (no data received).\par
spring.kafka.listener.log-container-config= # Whether to log the container configuration during initialization (INFO level).\par
spring.kafka.listener.monitor-interval= # Time between checks for non-responsive consumers. If a duration suffix is not specified, seconds will be used.\par
spring.kafka.listener.no-poll-threshold= # Multiplier applied to "pollTimeout" to determine if a consumer is non-responsive.\par
spring.kafka.listener.poll-timeout= # Timeout to use when polling the consumer.\par
spring.kafka.listener.type=single # Listener type.\par
spring.kafka.producer.acks= # Number of acknowledgments the producer requires the leader to have received before considering a request complete.\par
spring.kafka.producer.batch-size= # Default batch size in bytes.\par
spring.kafka.producer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.\par
spring.kafka.producer.buffer-memory= # Total bytes of memory the producer can use to buffer records waiting to be sent to the server.\par
spring.kafka.producer.client-id= # ID to pass to the server when making requests. Used for server-side logging.\par
spring.kafka.producer.compression-type= # Compression type for all data generated by the producer.\par
spring.kafka.producer.key-serializer= # Serializer class for keys.\par
spring.kafka.producer.properties.*= # Additional producer-specific properties used to configure the client.\par
spring.kafka.producer.retries= # When greater than zero, enables retrying of failed sends.\par
spring.kafka.producer.ssl.key-password= # Password of the private key in the key store file.\par
spring.kafka.producer.ssl.keystore-location= # Location of the key store file.\par
spring.kafka.producer.ssl.keystore-password= # Store password for the key store file.\par
spring.kafka.producer.ssl.keystore-type= # Type of the key store.\par
spring.kafka.producer.ssl.protocol= # SSL protocol to use.\par
spring.kafka.producer.ssl.truststore-location= # Location of the trust store file.\par
spring.kafka.producer.ssl.truststore-password= # Store password for the trust store file.\par
spring.kafka.producer.ssl.truststore-type= # Type of the trust store.\par
spring.kafka.producer.transaction-id-prefix= # When non empty, enables transaction support for producer.\par
spring.kafka.producer.value-serializer= # Serializer class for values.\par
spring.kafka.properties.*= # Additional properties, common to producers and consumers, used to configure the client.\par
spring.kafka.ssl.key-password= # Password of the private key in the key store file.\par
spring.kafka.ssl.keystore-location= # Location of the key store file.\par
spring.kafka.ssl.keystore-password= # Store password for the key store file.\par
spring.kafka.ssl.keystore-type= # Type of the key store.\par
spring.kafka.ssl.protocol= # SSL protocol to use.\par
spring.kafka.ssl.truststore-location= # Location of the trust store file.\par
spring.kafka.ssl.truststore-password= # Store password for the trust store file.\par
spring.kafka.ssl.truststore-type= # Type of the trust store.\par
spring.kafka.template.default-topic= # Default topic to which messages are sent.\par
\par
# RABBIT (RabbitProperties)\par
spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.\par
spring.rabbitmq.cache.channel.checkout-timeout= # Duration to wait to obtain a channel if the cache size has been reached.\par
spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.\par
spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.\par
spring.rabbitmq.cache.connection.size= # Number of connections to cache.\par
spring.rabbitmq.connection-timeout= # Connection timeout. Set it to zero to wait forever.\par
spring.rabbitmq.dynamic=true # Whether to create an AmqpAdmin bean.\par
spring.rabbitmq.host=localhost # RabbitMQ host.\par
spring.rabbitmq.listener.direct.acknowledge-mode= # Acknowledge mode of container.\par
spring.rabbitmq.listener.direct.auto-startup=true # Whether to start the container automatically on startup.\par
spring.rabbitmq.listener.direct.consumers-per-queue= # Number of consumers per queue.\par
spring.rabbitmq.listener.direct.default-requeue-rejected= # Whether rejected deliveries are re-queued by default.\par
spring.rabbitmq.listener.direct.idle-event-interval= # How often idle container events should be published.\par
spring.rabbitmq.listener.direct.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).\par
spring.rabbitmq.listener.direct.retry.enabled=false # Whether publishing retries are enabled.\par
spring.rabbitmq.listener.direct.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.\par
spring.rabbitmq.listener.direct.retry.max-attempts=3 # Maximum number of attempts to deliver a message.\par
spring.rabbitmq.listener.direct.retry.max-interval=10000ms # Maximum duration between attempts.\par
spring.rabbitmq.listener.direct.retry.multiplier=1 # Multiplier to apply to the previous retry interval.\par
spring.rabbitmq.listener.direct.retry.stateless=true # Whether retries are stateless or stateful.\par
spring.rabbitmq.listener.simple.acknowledge-mode= # Acknowledge mode of container.\par
spring.rabbitmq.listener.simple.auto-startup=true # Whether to start the container automatically on startup.\par
spring.rabbitmq.listener.simple.concurrency= # Minimum number of listener invoker threads.\par
spring.rabbitmq.listener.simple.default-requeue-rejected= # Whether rejected deliveries are re-queued by default.\par
spring.rabbitmq.listener.simple.idle-event-interval= # How often idle container events should be published.\par
spring.rabbitmq.listener.simple.max-concurrency= # Maximum number of listener invoker threads.\par
spring.rabbitmq.listener.simple.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).\par
spring.rabbitmq.listener.simple.retry.enabled=false # Whether publishing retries are enabled.\par
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.\par
spring.rabbitmq.listener.simple.retry.max-attempts=3 # Maximum number of attempts to deliver a message.\par
spring.rabbitmq.listener.simple.retry.max-interval=10000ms # Maximum duration between attempts.\par
spring.rabbitmq.listener.simple.retry.multiplier=1 # Multiplier to apply to the previous retry interval.\par
spring.rabbitmq.listener.simple.retry.stateless=true # Whether retries are stateless or stateful.\par
spring.rabbitmq.listener.simple.transaction-size= # Number of messages to be processed in a transaction. That is, the number of messages between acks. For best results, it should be less than or equal to the prefetch count.\par
spring.rabbitmq.listener.type=simple # Listener container type.\par
spring.rabbitmq.password=guest # Login to authenticate against the broker.\par
spring.rabbitmq.port=5672 # RabbitMQ port.\par
spring.rabbitmq.publisher-confirms=false # Whether to enable publisher confirms.\par
spring.rabbitmq.publisher-returns=false # Whether to enable publisher returns.\par
spring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout; zero for none. If a duration suffix is not specified, seconds will be used.\par
spring.rabbitmq.ssl.enabled=false # Whether to enable SSL support.\par
spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.\par
spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.\par
spring.rabbitmq.ssl.key-store-type=PKCS12 # Key store type.\par
spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.\par
spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.\par
spring.rabbitmq.ssl.trust-store-type=JKS # Trust store type.\par
spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default, configured by the Rabbit client library.\par
spring.rabbitmq.template.exchange= # Name of the default exchange to use for send operations.\par
spring.rabbitmq.template.mandatory= # Whether to enable mandatory messages.\par
spring.rabbitmq.template.receive-timeout= # Timeout for `receive()` operations.\par
spring.rabbitmq.template.reply-timeout= # Timeout for `sendAndReceive()` operations.\par
spring.rabbitmq.template.retry.enabled=false # Whether publishing retries are enabled.\par
spring.rabbitmq.template.retry.initial-interval=1000ms # Duration between the first and second attempt to deliver a message.\par
spring.rabbitmq.template.retry.max-attempts=3 # Maximum number of attempts to deliver a message.\par
spring.rabbitmq.template.retry.max-interval=10000ms # Maximum duration between attempts.\par
spring.rabbitmq.template.retry.multiplier=1 # Multiplier to apply to the previous retry interval.\par
spring.rabbitmq.template.routing-key= # Value of a default routing key to use for send operations.\par
spring.rabbitmq.username=guest # Login user to authenticate to the broker.\par
spring.rabbitmq.virtual-host= # Virtual host to use when connecting to the broker.\par
\par
\par
# ----------------------------------------\par
# ACTUATOR PROPERTIES\par
# ----------------------------------------\par
\par
# MANAGEMENT HTTP SERVER (ManagementServerProperties)\par
management.server.add-application-context-header=false # Add the "X-Application-Context" HTTP header in each response.\par
management.server.address= # Network address to which the management endpoints should bind. Requires a custom management.server.port.\par
management.server.port= # Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.\par
management.server.servlet.context-path= # Management endpoint context-path (for instance, `/management`). Requires a custom management.server.port.\par
management.server.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.\par
management.server.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store. Requires a custom management.server.port.\par
management.server.ssl.enabled= # Whether to enable SSL support. Requires a custom management.server.port.\par
management.server.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.server.port.\par
management.server.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.server.port.\par
management.server.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.server.port.\par
management.server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.server.port.\par
management.server.ssl.key-store-password= # Password used to access the key store. Requires a custom management.server.port.\par
management.server.ssl.key-store-provider= # Provider for the key store. Requires a custom management.server.port.\par
management.server.ssl.key-store-type= # Type of the key store. Requires a custom management.server.port.\par
management.server.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.server.port.\par
management.server.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.server.port.\par
management.server.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.server.port.\par
management.server.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.server.port.\par
management.server.ssl.trust-store-type= # Type of the trust store. Requires a custom management.server.port.\par
\par
# CLOUDFOUNDRY\par
management.cloudfoundry.enabled=true # Whether to enable extended Cloud Foundry actuator endpoints.\par
management.cloudfoundry.skip-ssl-validation=false # Whether to skip SSL verification for Cloud Foundry actuator endpoint security calls.\par
\par
# ENDPOINTS GENERAL CONFIGURATION\par
management.endpoints.enabled-by-default= # Whether to enable or disable all endpoints by default.\par
\par
# ENDPOINTS JMX CONFIGURATION (JmxEndpointProperties)\par
management.endpoints.jmx.domain=org.springframework.boot # Endpoints JMX domain name. Fallback to 'spring.jmx.default-domain' if set.\par
management.endpoints.jmx.exposure.include=* # Endpoint IDs that should be included or '*' for all.\par
management.endpoints.jmx.exposure.exclude= # Endpoint IDs that should be excluded or '*' for all.\par
management.endpoints.jmx.static-names= # Additional static properties to append to all ObjectNames of MBeans representing Endpoints.\par
management.endpoints.jmx.unique-names=false # Whether to ensure that ObjectNames are modified in case of conflict.\par
\par
# ENDPOINTS WEB CONFIGURATION (WebEndpointProperties)\par
management.endpoints.web.exposure.include=health,info # Endpoint IDs that should be included or '*' for all.\par
management.endpoints.web.exposure.exclude= # Endpoint IDs that should be excluded or '*' for all.\par
management.endpoints.web.base-path=/actuator # Base path for Web endpoints. Relative to server.servlet.context-path or management.server.servlet.context-path if management.server.port is configured.\par
management.endpoints.web.path-mapping= # Mapping between endpoint IDs and the path that should expose them.\par
\par
# ENDPOINTS CORS CONFIGURATION (CorsEndpointProperties)\par
management.endpoints.web.cors.allow-credentials= # Whether credentials are supported. When not set, credentials are not supported.\par
management.endpoints.web.cors.allowed-headers= # Comma-separated list of headers to allow in a request. '*' allows all headers.\par
management.endpoints.web.cors.allowed-methods= # Comma-separated list of methods to allow. '*' allows all methods. When not set, defaults to GET.\par
management.endpoints.web.cors.allowed-origins= # Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.\par
management.endpoints.web.cors.exposed-headers= # Comma-separated list of headers to include in a response.\par
management.endpoints.web.cors.max-age=1800s # How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used.\par
\par
# AUDIT EVENTS ENDPOINT (AuditEventsEndpoint)\par
management.endpoint.auditevents.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.auditevents.enabled=true # Whether to enable the auditevents endpoint.\par
\par
# BEANS ENDPOINT (BeansEndpoint)\par
management.endpoint.beans.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.beans.enabled=true # Whether to enable the beans endpoint.\par
\par
# CONDITIONS REPORT ENDPOINT (ConditionsReportEndpoint)\par
management.endpoint.conditions.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.conditions.enabled=true # Whether to enable the conditions endpoint.\par
\par
# CONFIGURATION PROPERTIES REPORT ENDPOINT (ConfigurationPropertiesReportEndpoint, ConfigurationPropertiesReportEndpointProperties)\par
management.endpoint.configprops.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.configprops.enabled=true # Whether to enable the configprops endpoint.\par
management.endpoint.configprops.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services,sun.java.command # Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.\par
\par
# ENVIRONMENT ENDPOINT (EnvironmentEndpoint, EnvironmentEndpointProperties)\par
management.endpoint.env.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.env.enabled=true # Whether to enable the env endpoint.\par
management.endpoint.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services,sun.java.command # Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.\par
\par
# FLYWAY ENDPOINT (FlywayEndpoint)\par
management.endpoint.flyway.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.flyway.enabled=true # Whether to enable the flyway endpoint.\par
\par
# HEALTH ENDPOINT (HealthEndpoint, HealthEndpointProperties)\par
management.endpoint.health.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.health.enabled=true # Whether to enable the health endpoint.\par
management.endpoint.health.roles= # Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.\par
management.endpoint.health.show-details=never # When to show full health details.\par
\par
# HEAP DUMP ENDPOINT (HeapDumpWebEndpoint)\par
management.endpoint.heapdump.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.heapdump.enabled=true # Whether to enable the heapdump endpoint.\par
\par
# HTTP TRACE ENDPOINT (HttpTraceEndpoint)\par
management.endpoint.httptrace.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.httptrace.enabled=true # Whether to enable the httptrace endpoint.\par
\par
# INFO ENDPOINT (InfoEndpoint)\par
info= # Arbitrary properties to add to the info endpoint.\par
management.endpoint.info.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.info.enabled=true # Whether to enable the info endpoint.\par
\par
# JOLOKIA ENDPOINT (JolokiaProperties)\par
management.endpoint.jolokia.config.*= # Jolokia settings. Refer to the documentation of Jolokia for more details.\par
management.endpoint.jolokia.enabled=true # Whether to enable the jolokia endpoint.\par
\par
# LIQUIBASE ENDPOINT (LiquibaseEndpoint)\par
management.endpoint.liquibase.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.liquibase.enabled=true # Whether to enable the liquibase endpoint.\par
\par
# LOG FILE ENDPOINT (LogFileWebEndpoint, LogFileWebEndpointProperties)\par
management.endpoint.logfile.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.logfile.enabled=true # Whether to enable the logfile endpoint.\par
management.endpoint.logfile.external-file= # External Logfile to be accessed. Can be used if the logfile is written by output redirect and not by the logging system itself.\par
\par
# LOGGERS ENDPOINT (LoggersEndpoint)\par
management.endpoint.loggers.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.loggers.enabled=true # Whether to enable the loggers endpoint.\par
\par
# REQUEST MAPPING ENDPOINT  (MappingsEndpoint)\par
management.endpoint.mappings.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.mappings.enabled=true # Whether to enable the mappings endpoint.\par
\par
# METRICS ENDPOINT (MetricsEndpoint)\par
management.endpoint.metrics.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.metrics.enabled=true # Whether to enable the metrics endpoint.\par
\par
# PROMETHEUS ENDPOINT (PrometheusScrapeEndpoint)\par
management.endpoint.prometheus.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.prometheus.enabled=true # Whether to enable the prometheus endpoint.\par
\par
# SCHEDULED TASKS ENDPOINT (ScheduledTasksEndpoint)\par
management.endpoint.scheduledtasks.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.scheduledtasks.enabled=true # Whether to enable the scheduledtasks endpoint.\par
\par
# SESSIONS ENDPOINT (SessionsEndpoint)\par
management.endpoint.sessions.enabled=true # Whether to enable the sessions endpoint.\par
\par
# SHUTDOWN ENDPOINT (ShutdownEndpoint)\par
management.endpoint.shutdown.enabled=false # Whether to enable the shutdown endpoint.\par
\par
# THREAD DUMP ENDPOINT (ThreadDumpEndpoint)\par
management.endpoint.threaddump.cache.time-to-live=0ms # Maximum time that a response can be cached.\par
management.endpoint.threaddump.enabled=true # Whether to enable the threaddump endpoint.\par
\par
# HEALTH INDICATORS\par
management.health.db.enabled=true # Whether to enable database health check.\par
management.health.cassandra.enabled=true # Whether to enable Cassandra health check.\par
management.health.couchbase.enabled=true # Whether to enable Couchbase health check.\par
management.health.defaults.enabled=true # Whether to enable default health indicators.\par
management.health.diskspace.enabled=true # Whether to enable disk space health check.\par
management.health.diskspace.path= # Path used to compute the available disk space.\par
management.health.diskspace.threshold=0 # Minimum disk space, in bytes, that should be available.\par
management.health.elasticsearch.enabled=true # Whether to enable Elasticsearch health check.\par
management.health.elasticsearch.indices= # Comma-separated index names.\par
management.health.elasticsearch.response-timeout=100ms # Time to wait for a response from the cluster.\par
management.health.influxdb.enabled=true # Whether to enable InfluxDB health check.\par
management.health.jms.enabled=true # Whether to enable JMS health check.\par
management.health.ldap.enabled=true # Whether to enable LDAP health check.\par
management.health.mail.enabled=true # Whether to enable Mail health check.\par
management.health.mongo.enabled=true # Whether to enable MongoDB health check.\par
management.health.neo4j.enabled=true # Whether to enable Neo4j health check.\par
management.health.rabbit.enabled=true # Whether to enable RabbitMQ health check.\par
management.health.redis.enabled=true # Whether to enable Redis health check.\par
management.health.solr.enabled=true # Whether to enable Solr health check.\par
management.health.status.http-mapping= # Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (for example, UP maps to 200).\par
management.health.status.order=DOWN,OUT_OF_SERVICE,UP,UNKNOWN # Comma-separated list of health statuses in order of severity.\par
\par
# HTTP TRACING (HttpTraceProperties)\par
management.trace.http.enabled=true # Whether to enable HTTP request-response tracing.\par
management.trace.http.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.\par
\par
# INFO CONTRIBUTORS (InfoContributorProperties)\par
management.info.build.enabled=true # Whether to enable build info.\par
management.info.defaults.enabled=true # Whether to enable default info contributors.\par
management.info.env.enabled=true # Whether to enable environment info.\par
management.info.git.enabled=true # Whether to enable git info.\par
management.info.git.mode=simple # Mode to use to expose git information.\par
\par
# METRICS\par
management.metrics.binders.files.enabled=true # Whether to enable files metrics.\par
management.metrics.binders.integration.enabled=true # Whether to enable Spring Integration metrics.\par
management.metrics.binders.jvm.enabled=true # Whether to enable JVM metrics.\par
management.metrics.binders.logback.enabled=true # Whether to enable Logback metrics.\par
management.metrics.binders.processor.enabled=true # Whether to enable processor metrics.\par
management.metrics.binders.uptime.enabled=true # Whether to enable uptime metrics.\par
management.metrics.distribution.percentiles-histogram.*= # Whether meter IDs starting-with the specified name should be publish percentile histograms.\par
management.metrics.distribution.percentiles.*= # Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name.\par
management.metrics.distribution.sla.*= # Specific SLA boundaries for meter IDs starting-with the specified name. The longest match wins, the key `all` can also be used to configure all meters.\par
management.metrics.enable.*= # Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.\par
management.metrics.export.atlas.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\par
management.metrics.export.atlas.config-refresh-frequency=10s # Frequency for refreshing config settings from the LWC service.\par
management.metrics.export.atlas.config-time-to-live=150s # Time to live for subscriptions from the LWC service.\par
management.metrics.export.atlas.config-uri=http://localhost:7101/lwc/api/v1/expressions/local-dev # URI for the Atlas LWC endpoint to retrieve current subscriptions.\par
management.metrics.export.atlas.connect-timeout=1s # Connection timeout for requests to this backend.\par
management.metrics.export.atlas.enabled=true # Whether exporting of metrics to this backend is enabled.\par
management.metrics.export.atlas.eval-uri=http://localhost:7101/lwc/api/v1/evaluate # URI for the Atlas LWC endpoint to evaluate the data for a subscription.\par
management.metrics.export.atlas.lwc-enabled=false # Whether to enable streaming to Atlas LWC.\par
management.metrics.export.atlas.meter-time-to-live=15m # Time to live for meters that do not have any activity. After this period the meter will be considered expired and will not get reported.\par
management.metrics.export.atlas.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\par
management.metrics.export.atlas.read-timeout=10s # Read timeout for requests to this backend.\par
management.metrics.export.atlas.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.atlas.uri=http://localhost:7101/api/v1/publish # URI of the Atlas server.\par
management.metrics.export.datadog.api-key= # Datadog API key.\par
management.metrics.export.datadog.application-key= # Datadog application key. Not strictly required, but improves the Datadog experience by sending meter descriptions, types, and base units to Datadog.\par
management.metrics.export.datadog.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\par
management.metrics.export.datadog.connect-timeout=1s # Connection timeout for requests to this backend.\par
management.metrics.export.datadog.descriptions=true # Whether to publish descriptions metadata to Datadog. Turn this off to minimize the amount of metadata sent.\par
management.metrics.export.datadog.enabled=true # Whether exporting of metrics to this backend is enabled.\par
management.metrics.export.datadog.host-tag=instance # Tag that will be mapped to "host" when shipping metrics to Datadog.\par
management.metrics.export.datadog.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\par
management.metrics.export.datadog.read-timeout=10s # Read timeout for requests to this backend.\par
management.metrics.export.datadog.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.datadog.uri=https://app.datadoghq.com # URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Datadog, you can define the location of the proxy with this.\par
management.metrics.export.ganglia.addressing-mode=multicast # UDP addressing mode, either unicast or multicast.\par
management.metrics.export.ganglia.duration-units=milliseconds # Base time unit used to report durations.\par
management.metrics.export.ganglia.enabled=true # Whether exporting of metrics to Ganglia is enabled.\par
management.metrics.export.ganglia.host=localhost # Host of the Ganglia server to receive exported metrics.\par
management.metrics.export.ganglia.port=8649 # Port of the Ganglia server to receive exported metrics.\par
management.metrics.export.ganglia.protocol-version=3.1 # Ganglia protocol version. Must be either 3.1 or 3.0.\par
management.metrics.export.ganglia.rate-units=seconds # Base time unit used to report rates.\par
management.metrics.export.ganglia.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.ganglia.time-to-live=1 # Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live to be one greater than the number of hops (routers) between the hosts.\par
management.metrics.export.graphite.duration-units=milliseconds # Base time unit used to report durations.\par
management.metrics.export.graphite.enabled=true # Whether exporting of metrics to Graphite is enabled.\par
management.metrics.export.graphite.host=localhost # Host of the Graphite server to receive exported metrics.\par
management.metrics.export.graphite.port=2004 # Port of the Graphite server to receive exported metrics.\par
management.metrics.export.graphite.protocol=pickled # Protocol to use while shipping data to Graphite.\par
management.metrics.export.graphite.rate-units=seconds # Base time unit used to report rates.\par
management.metrics.export.graphite.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.graphite.tags-as-prefix= # For the default naming convention, turn the specified tag keys into part of the metric prefix.\par
management.metrics.export.influx.auto-create-db=true # Whether to create the Influx database if it does not exist before attempting to publish metrics to it.\par
management.metrics.export.influx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\par
management.metrics.export.influx.compressed=true # Whether to enable GZIP compression of metrics batches published to Influx.\par
management.metrics.export.influx.connect-timeout=1s # Connection timeout for requests to this backend.\par
management.metrics.export.influx.consistency=one # Write consistency for each point.\par
management.metrics.export.influx.db=mydb # Tag that will be mapped to "host" when shipping metrics to Influx.\par
management.metrics.export.influx.enabled=true # Whether exporting of metrics to this backend is enabled.\par
management.metrics.export.influx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\par
management.metrics.export.influx.password= # Login password of the Influx server.\par
management.metrics.export.influx.read-timeout=10s # Read timeout for requests to this backend.\par
management.metrics.export.influx.retention-duration= # Time period for which Influx should retain data in the current database.\par
management.metrics.export.influx.retention-shard-duration= # Time range covered by a shard group.\par
management.metrics.export.influx.retention-policy= # Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).\par
management.metrics.export.influx.retention-replication-factor= # How many copies of the data are stored in the cluster.\par
management.metrics.export.influx.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.influx.uri=http://localhost:8086 # URI of the Influx server.\par
management.metrics.export.influx.user-name= # Login user of the Influx server.\par
management.metrics.export.jmx.domain=metrics # Metrics JMX domain name.\par
management.metrics.export.jmx.enabled=true # Whether exporting of metrics to JMX is enabled.\par
management.metrics.export.jmx.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.newrelic.account-id= # New Relic account ID.\par
management.metrics.export.newrelic.api-key= # New Relic API key.\par
management.metrics.export.newrelic.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\par
management.metrics.export.newrelic.connect-timeout=1s # Connection timeout for requests to this backend.\par
management.metrics.export.newrelic.enabled=true # Whether exporting of metrics to this backend is enabled.\par
management.metrics.export.newrelic.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\par
management.metrics.export.newrelic.read-timeout=10s # Read timeout for requests to this backend.\par
management.metrics.export.newrelic.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.newrelic.uri=https://insights-collector.newrelic.com # URI to ship metrics to.\par
management.metrics.export.prometheus.descriptions=true # Whether to enable publishing descriptions as part of the scrape payload to Prometheus. Turn this off to minimize the amount of data sent on each scrape.\par
management.metrics.export.prometheus.enabled=true # Whether exporting of metrics to Prometheus is enabled.\par
management.metrics.export.prometheus.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.signalfx.access-token= # SignalFX access token.\par
management.metrics.export.signalfx.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\par
management.metrics.export.signalfx.connect-timeout=1s # Connection timeout for requests to this backend.\par
management.metrics.export.signalfx.enabled=true # Whether exporting of metrics to this backend is enabled.\par
management.metrics.export.signalfx.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\par
management.metrics.export.signalfx.read-timeout=10s # Read timeout for requests to this backend.\par
management.metrics.export.signalfx.source= # Uniquely identifies the app instance that is publishing metrics to SignalFx. Defaults to the local host name.\par
management.metrics.export.signalfx.step=10s # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.signalfx.uri=https://ingest.signalfx.com # URI to ship metrics to.\par
management.metrics.export.simple.enabled=true # Whether, in the absence of any other exporter, exporting of metrics to an in-memory backend is enabled.\par
management.metrics.export.simple.mode=cumulative # Counting mode.\par
management.metrics.export.simple.step=1m # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.statsd.enabled=true # Whether exporting of metrics to StatsD is enabled.\par
management.metrics.export.statsd.flavor=datadog # StatsD line protocol to use.\par
management.metrics.export.statsd.host=localhost # Host of the StatsD server to receive exported metrics.\par
management.metrics.export.statsd.max-packet-length=1400 # Total length of a single payload should be kept within your network's MTU.\par
management.metrics.export.statsd.polling-frequency=10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.\par
management.metrics.export.statsd.port=8125 # Port of the StatsD server to receive exported metrics.\par
management.metrics.export.statsd.publish-unchanged-meters=true # Whether to send unchanged meters to the StatsD server.\par
management.metrics.export.wavefront.api-token= # API token used when publishing metrics directly to the Wavefront API host.\par
management.metrics.export.wavefront.batch-size=10000 # Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.\par
management.metrics.export.wavefront.connect-timeout=1s # Connection timeout for requests to this backend.\par
management.metrics.export.wavefront.enabled=true # Whether exporting of metrics to this backend is enabled.\par
management.metrics.export.wavefront.global-prefix= # Global prefix to separate metrics originating from this app's white box instrumentation from those originating from other Wavefront integrations when viewed in the Wavefront UI.\par
management.metrics.export.wavefront.num-threads=2 # Number of threads to use with the metrics publishing scheduler.\par
management.metrics.export.wavefront.read-timeout=10s # Read timeout for requests to this backend.\par
management.metrics.export.wavefront.source= # Unique identifier for the app instance that is the source of metrics being published to Wavefront. Defaults to the local host name.\par
management.metrics.export.wavefront.step=10s # Step size (i.e. reporting frequency) to use.\par
management.metrics.export.wavefront.uri=https://longboard.wavefront.com # URI to ship metrics to.\par
management.metrics.use-global-registry=true # Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics.\par
management.metrics.web.client.max-uri-tags=100 # Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.\par
management.metrics.web.client.requests-metric-name=http.client.requests # Name of the metric for sent requests.\par
management.metrics.web.server.auto-time-requests=true # Whether requests handled by Spring MVC or WebFlux should be automatically timed.\par
management.metrics.web.server.requests-metric-name=http.server.requests # Name of the metric for received requests.\par
\par
\par
# ----------------------------------------\par
# DEVTOOLS PROPERTIES\par
# ----------------------------------------\par
\par
# DEVTOOLS (DevToolsProperties)\par
spring.devtools.livereload.enabled=true # Whether to enable a livereload.com-compatible server.\par
spring.devtools.livereload.port=35729 # Server port.\par
spring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.\par
spring.devtools.restart.additional-paths= # Additional paths to watch for changes.\par
spring.devtools.restart.enabled=true # Whether to enable automatic restart.\par
spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties # Patterns that should be excluded from triggering a full restart.\par
spring.devtools.restart.log-condition-evaluation-delta=true # Whether to log the condition evaluation delta upon restart.\par
spring.devtools.restart.poll-interval=1s # Amount of time to wait between polling for classpath changes.\par
spring.devtools.restart.quiet-period=400ms # Amount of quiet time required without any classpath changes before a restart is triggered.\par
spring.devtools.restart.trigger-file= # Name of a specific file that, when changed, triggers the restart check. If not specified, any classpath file change triggers the restart.\par
\par
# REMOTE DEVTOOLS (RemoteDevToolsProperties)\par
spring.devtools.remote.context-path=/.~~spring-boot!~ # Context path used to handle the remote connection.\par
spring.devtools.remote.proxy.host= # The host of the proxy to use to connect to the remote application.\par
spring.devtools.remote.proxy.port= # The port of the proxy to use to connect to the remote application.\par
spring.devtools.remote.restart.enabled=true # Whether to enable remote restart.\par
spring.devtools.remote.secret= # A shared secret required to establish a connection (required to enable remote support).\par
spring.devtools.remote.secret-header-name=X-AUTH-TOKEN # HTTP header used to transfer the shared secret.\par
\par
\par
# ----------------------------------------\par
# TESTING PROPERTIES\par
# ----------------------------------------\par
\par
spring.test.database.replace=any # Type of existing DataSource to replace.\par
spring.test.mockmvc.print=default # MVC Print option.\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
There are\~sixteen\~categories of Spring Boot Property are as follows:\par
Core Properties\par
Cache Properties\par
Mail Properties\par
JSON Properties\par
Data Properties\par
Transaction Properties\par
Data Migration Properties\par
Integration Properties\par
Web Properties\par
Templating Properties\par
Server Properties\par
Security Properties\par
RSocket Properties\par
Actuator Properties\par
DevTools Properties\par
Testing Properties\par
\par
\par
\par
\par
\par
\par
\par
\par
Spring Boot provides various properties that can be configured in the\~application.properties\~file. The properties have default values. We can set a property(s) for the Spring Boot application. Spring Boot also allows us to define our own property if required.\par
The application.properties file allows us to run an application in a\~different environment.\~In short, we can use the application.properties file to:\par
Configure the Spring Boot framework\par
define our application custom configuration properties\par
\par
}
 